{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"pause",
				"pauseinterval"
			],
			[
				"highli",
				"highlighted_cells"
			],
			[
				"no",
				"noneurons"
			],
			[
				"sel",
				"sel_table_1"
			],
			[
				"g_K",
				"g_Kdr_s"
			],
			[
				"p",
				"parser\targparse"
			],
			[
				"curl",
				"bridg_curlies"
			],
			[
				"clus",
				"clusterize"
			],
			[
				"ins",
				"interstimT"
			],
			[
				"slow",
				"slowfreq"
			],
			[
				"oscil",
				"oscillator_frequencies"
			],
			[
				"line",
				"linewidth"
			],
			[
				"oscila",
				"oscillators"
			],
			[
				"omega",
				"omega_i"
			],
			[
				"syp",
				"synapse_type"
			],
			[
				"cluster",
				"clusters"
			],
			[
				"netwo",
				"networkHistory"
			],
			[
				"V_s",
				"V_soma_unwrapped"
			],
			[
				"prop",
				"propspkneurons"
			],
			[
				"meanc",
				"meannoconn"
			],
			[
				"gb",
				"gbar_ampa_soma"
			],
			[
				"mean",
				"meannoconn"
			],
			[
				"sp",
				"spikespercell"
			]
		]
	},
	"buffers":
	[
		{
			"file": "functions/leak_compensation.m",
			"settings":
			{
				"buffer_size": 1878,
				"encoding": "UTF-8",
				"line_ending": "Unix",
				"name": "leak_compensation.m"
			},
			"undo_stack":
			[
			]
		},
		{
			"contents": "% Exc Inh Duel.m\n% \n% set(0,'DefaultFigureColor', [1 1 1])\nset(0, 'DefaultAxesColormap', cbrewer('div', 'Spectral',30))\n\n% [================================================]\n% \t\t simulation parameters\n% [================================================]\n%% clear\n\nsteadystate_time = 500; %ms\nsimtime  = 3000; %ms\ndelta = .025;\ngpu = 1;\n\nif exist('seed') ; seed = seed +1 ; else ; seed = 0; end\nthisseed = rng(int8(seed),'twister') % random seed only for simulations (not for network cells)\nthisseed.Seed\n\n%% [================================================]\n% steps to perform\n% [================================================]\n\nconjuctive_stimulation = 0;\n\nproduce_plots = 1;\n\n% [================================================]\n% variables to report\n% [================================================]\n\nactivations =  {'V_soma','V_dend','V_axon','Calcium_l', 'Calcium_r', 'Ca2Plus', 'Potassium_s', 'Hcurrent_q', 'Hcurrent_q','Sodium_m_a', 'Sodium_h_a','Potassium_x_a'};\ncurrents = {'V_soma','V_dend','V_axon', 'I_CaL', 'I_ds', 'I_as', 'I_Na_s', 'I_ls', 'I_Kdr_s', 'I_K_s', 'I_CaH', 'I_sd', 'I_ld', 'I_K_Ca', 'I_cx36', 'I_h', 'I_h_s', 'I_K_a', 'I_sa', 'I_la', 'I_Na_a'};\nvsoma = {'V_soma'};\ngapcur= {'V_soma' 'I_cx36'};\n\nselection = {'V_soma', 'I_cx36', 'Hcurrent_q' ,'Calcium_l', 'Calcium_r'};\n\n\n% variables to store\nto_report = selection;\n\n\n% [================================================]\n% \t\t input\n% [================================================]\n\n% currentstep = 9; %uA/cm^2 -> x .1 nA for a cell with 10000um^2\n% ounoise_params = [.2 .3 0 5];\n% ounoise_params = [1/50 .1 0 double(thisseed.Seed)];\nounoise_params = [0 0 0 double(thisseed.Seed)];\nsametoall = 0.05;\n\n% [================================================]\n% \t\tconnectivity\n% [================================================]\n \n% out = createW('type', netsize, radius, scaling, randomize, plotthis, maxiter, meanconn, somatapositions, symmetrize, clusterize,normalize)\n\n% nconns_curlies = 8;\n% nconns_bridges = 6;\n\n% gap_curlies = .1;\n% gap_bridges = .1;\n% plotconn = 1;\n% normalize = 1;\n\nnconns_curlies = 5;\nnconns_bridges = 5;\ncells_in_cluster = 20;  % upperbound estimate from: % Parameters from: N. Vrieler, S. Loyola, Y. Yarden-Rabinowitz, J. Hoogendorp, N. Medvedev, T. M. Hoogland, C. I. D. Zeeuw, E. d. Schutter, Y. Yarom, M. Negrello, B. Torben-Nielsen, and M. Y. Uusisaari. Variability and directionality of inferior olive neuron dendrites revealed by detailed 3D characterization of an extensive morphological library. Brain structure & function, 92(4):e52068 – 19, 2019.\ngap_curlies = .03;\ngap_bridges = .03;\nplotconn = 0;\nnormalize = 1;\n\n\n\nload('JM394_horizontal_coordinates-MAO.mat')\nsomatapositions = JM394_horizontal_coordinates;\nsomatapositions(1,:) = [];\nnoneurons = length(somatapositions);\n\n\n%    __________  _   ___   _________________________    ______________  __\n%   / ____/ __ \\/ | / / | / / ____/ ____/_  __/  _/ |  / /  _/_  __/\\ \\/ /\n%  / /   / / / /  |/ /  |/ / __/ / /     / /  / / | | / // /  / /    \\  /\n% / /___/ /_/ / /|  / /|  / /___/ /___  / / _/ /  | |/ // /  / /     / /\n% \\____/\\____/_/ |_/_/ |_/_____/\\____/ /_/ /___/  |___/___/ /_/     /_/\n\n\n\nif not(exist('curlies'))\n\t% curlies:\n\t% create a network with distance based connectivity for close by connections\n\t% this network is clusterized with about 20cells per cluster, according to a k-means algo.\n\n\t% Parameters from: N. Vrieler, S. Loyola, Y. Yarden-Rabinowitz, J. Hoogendorp, N. Medvedev, T. M. Hoogland, C. I. D. Zeeuw, E. d. Schutter, Y. Yarom, M. Negrello, B. Torben-Nielsen, and M. Y. Uusisaari. Variability and directionality of inferior olive neuron dendrites revealed by detailed 3D characterization of an extensive morphological library. Brain structure & function, 92(4):e52068 – 19, 2019.\n\n\t% radius within which we allow connections\n\t% between curlies:\n\tmedian_soma_distance = 20;\n\trad_cur = median_soma_distance * 6;\n\t% between bridges:\n\trad_bri = median_soma_distance * 12;\n\n\n% \tTHE CODE BELOW IS TO CREATE CLUSTERIZED NETWORKS. NOT REQUIRED.\n% \n% \tcurlies = createW('3d_reconstruction', [], rad_cur, 1, 0, plotconn, [], nconns_curlies, somatapositions,1,[1 cells_in_cluster 1 0]);\n% \n% \t% create a network with distance based connectivity for further apart cells: bridges\n% \t% these cells are not bound to specific clusters.\n% \tbridges = createW('3d_reconstruction', [], rad_bri, 1, 0, plotconn, [], nconns_bridges, somatapositions,1,[1 cells_in_cluster 0 1]);\n% \n% \n% \t% define the indices of 10% of the cells, these will be bridges\n% \tbc = randperm(noneurons); % randomly permute cell indices\n% \tz = zeros(noneurons,1) ; % initialize index vector\n% \tz(bc(1:round(.1*noneurons))) = 1; % make 10% of the cells == bridges\n% \tbc =z;\n% \tbridge_idx = find(bc);\n% \n% \t% remove from curlie adjacency matrix all of those that will become bridges\n% \tcurlies.W = bsxfun(@times, curlies.W, ~z);\n% \tcurlies.W = bsxfun(@times, curlies.W, ~(z')); % multiply by the 'unitary' conductance\n% \tcurlies_bu = curlies; %_bu -> binary undirected\n% \tcurlies.W = curlies.W*gap_curlies;\n% \t% curlies.stats.clusters(bridge_idx) = 0;\n% \t\n% \tcstats = connectivity_statistics(bridges);\n% \tcurlies.stats = cstats.stats ;\n% \n% \t% remove connections from curlies to bridges from bridge adjacency matrix\n% \tbridges.W = bsxfun(@times, bridges.W, z);\n% \t% create bridge cells connectivity \n% \tbridges.W = (bridges.W+bridges.W');\n% \tbridges_bu = bridges; % _bu -> binary undirected\n% \tbridges.W = bridges.W*gap_bridges;\n% \n% \tbstats = connectivity_statistics(bridges);\n% \tbridges.stats = bstats.stats ;\n% \n% \tbridg_curlies.coords = curlies.coords;\n% \n% \tbridg_curlies.W = curlies.W + bridges.W;\n% \tbridg_curlies.stats = connectivity_statistics(bridg_curlies);\n% \tbridg_curlies.stats.clusters = curlies.stats.clusters;\n% \t% bridg_curlies.stats.clusters(bridge_idx) = 0;\n% \n% \tclusteridx = bridg_curlies.stats.clusters;\n% \tclusteridx(logical(bc)) = 70;\n% \tplotnetstruct(bridg_curlies.W, bridg_curlies.coords(:,1), bridg_curlies.coords(:,2), bridg_curlies.coords(:,3), clusteridx)\n\n\tbrick = createW('3d_reconstruction', [], rad_bri, 1, 1, plotconn, [], nconns_curlies, somatapositions,1,[0 0 0 0]);\n\tbrick_bu = brick;\n\tbrick.W = brick.W*gap_curlies;\n\nend\n\n\n\n% Wcluster150 = createW('3d_chebychev', netsize, 3, 1, 1, 1, [], 8, [], plotconn, [1 150 .9 .01],1);\n\n\n% [=================================================================]\n%  create cells and set conductance parameters\n% [=================================================================]\ncal_boost = -0.28; %30% oscillating cells without noise g=0.05\n% cal_boost = -0.4; %nothing oscillates\n\ncell_function = 'vanilla'; % 'devel'\n\ndef_neurons = createDefaultNeurons(noneurons,'celltypes','randomized', 'rng', thisseed) \n\n% adjusting to reach 5mV amplitude of hyperpolarization, as in experimental data\ndef_neurons.gbar_gaba_dend = def_neurons.gbar_gaba_dend + 0.75; % subthreshold\ndef_neurons.gbar_gaba_soma = def_neurons.gbar_gaba_soma + 0.75; % subthreshold\ndef_neurons.g_CaL = def_neurons.g_CaL + cal_boost;\n\n\n% def_neurons.gbar_gaba_soma = def_neurons.gbar_gaba_dend + 0.75; % subthreshold\n\n\n%%\n% [================================================]\n%  Projection Fields of AMPA and GABA\n% [================================================]\n\npert.mask     {1} =  create_input_mask(somatapositions, 'reconstruction','radius',100, 'offset', [-60, 0, 0], 'synapseprobability', .85,'plotme',0)\npert.amplitude{1} = 1;\npert.duration {1} = 1;\npert.type\t  {1} = 'ampa_dend';\n\npert.mask     {2} =  create_input_mask(somatapositions, 'reconstruction','radius',100, 'offset', [-40, 0, 0], 'synapseprobability', .85,'plotme',0) % probability adjusted to make number of cells in cluster match\npert.amplitude{2} = 1\npert.duration {2} = 5; %ms was the duration of the stimulus in Tycho's paper.\npert.type\t  {2} = 'gaba_dend';\n\n\n% adding somatic gaba for longer hyperpolarization effect\n% pert.mask     {3} =  create_input_mask(somatapositions, 'reconstruction','radius',100, 'offset', [-40, 0, 0], 'synapseprobability', .85,'plotme',0) % probability adjusted to make number of cells in cluster match\n% pert.amplitude{3} = 1\n% pert.duration {3} = 5; %ms was the duration of the stimulus in Tycho's paper.\n% pert.type     {3} = 'gaba_dend';\n\n\n\n\n\nfigure\nscatter3(somatapositions(:,1), somatapositions(:,2), somatapositions(:,3), 200, pert.mask{1} + pert.mask{2}*2 -1,'filled'), axis equal\n\ncm = [150 147 130 ; 60 35 250  ; 250 35 29 ; 200 35 190]/255;\ncolormap(cm)\nalpha(.3)\n\n% apply some current to check the behavior of the cells\nI_app = [];\n\n\nreturn\n%%\n\n%%================================================]\n% \t\t compute transients/steadystate\n%=================================================]\n\nif conjuctive_stimulation\n if ~exist('st_st','var')\n\tdisp('calculating transients')\n\n\t st_st = IOnet( 'cell_parameters', def_neurons, ...\n\t \t\t'perturbation', [], ...\n\t\t   \t'networksize', [1 1 noneurons] ,'time',steadystate_time ,'W', brick.W ,'ou_noise', ounoise_params , ...\n\t\t   \t'to_report', to_report ,'gpu', gpu , ...\n\t\t   \t'cell_function', cell_function ,'delta',delta,'sametoall', sametoall);\n\t st_st.note = 'brick steady state' \nend\n\n% \t% st_st.Plist = Plist;\n% end\n\n%%\n\n\n    i = 0;\n    intervals = [-150:10:150];\n    for interval = intervals\n        i = i + 1;\n        \n        onset_of_inh = 1000;\n        onset_of_exc = onset_of_inh + interval;\n    \n        pert.triggers {1} = onset_of_exc;\n        pert.triggers {2} = onset_of_inh;\n\n        sim{i} = IOnet( 'cell_parameters', def_neurons, ...\n                'perturbation', pert, 'tempState', st_st.lastState, ...\n                'networksize', [1 1 noneurons] ,'time',simtime ,'W', brick.W ,'ou_noise', ounoise_params  ,...\n                'to_report', to_report ,'gpu', gpu , ...\n                'cell_function', cell_function ,'delta',delta,'sametoall', sametoall);\n\n        sim{i}.networkHistory.V_soma = single(sim{i}.networkHistory.V_soma);\n        sim{i}.networkHistory.Cal_r = single(sim{i}.networkHistory.Calcium_r);\n        sim{i}.networkHistory.Cal_l = single(sim{i}.networkHistory.Calcium_l);\n        sim{i}.networkHistory.h = single(sim{i}.networkHistory.Hcurrent_q);\n        sim{i}.networkHistory.backgroundnoise = [];\n        sim{i}.note = ['exc vs inh ' num2str(interval)]\n\n        \n    end\n   \t\teval(['save exc_inh_net' num2str(seed) '_'  date ' -v7.3'])\nend\n\n\nif produce_plots\n\n    ff = figure\n    savemovie = 0;\n    animate = 0;\n\n    for f = [1 17 22]\n        combgroup = find(pert.mask{1}&pert.mask{2});\n        ph_dist{f} = phase_distribution_over_time(sim{f},'duration', [700:1300],'animate',animate, 'fname', ['phasedist_' num2str(f)], 'savemovie',savemovie, 'group', combgroup')\n        ph_dist{f}.pert = sim{f}.perturbation;\n    end\n\n    for f = 1:length(intervals)\n        trig = sort([sim{f}.perturbation.triggers{1}, sim{f}.perturbation.triggers{2}]);\n\n        sync_estimate_g(f,1) = mean(abs(ph_dist{f}.phases.orderparameter{1}(trig(1)-220:trig(1)-20)));\n        sync_estimate_g(f,2) = mean(abs(ph_dist{f}.phases.orderparameter{1}(trig(1):trig(2)+20)));\n        sync_estimate_g(f,3) = mean(abs(ph_dist{f}.phases.orderparameter{1}(trig(2)+20:trig(2)+220)));\n        sync_estimate_g(f,4) = mean(abs(ph_dist{f}.phases.orderparameter{1}(trig(2)+500:trig(2)+700)));\n\n        sync_estimate(f,1) = mean(abs(ph_dist{f}.phases.orderparameter{2}(trig(1)-220:trig(1)-20)));\n        sync_estimate(f,2) = mean(abs(ph_dist{f}.phases.orderparameter{2}(trig(1):trig(2)+20)));\n        sync_estimate(f,3) = mean(abs(ph_dist{f}.phases.orderparameter{2}(trig(2)+20:trig(2)+220)));\n        sync_estimate(f,4) = mean(abs(ph_dist{f}.phases.orderparameter{2}(trig(2)+500:trig(2)+700)));\n    end\n\n\n    plotvolume = 1;\n    if plotvolume\n        for f = [1 17 22]\n            V = sim{f}.networkHistory.V_soma;\n            % H = P.hilbert;\n            % plot_volume(V,somatapositions,[755:1:1555])\n            animate_volume_hilbert(V,somatapositions,[755:1:1555])\n            % plot_volume(ph_dist{f}.networkHistory.V_soma,somatapositions,[905:50:1255])\n\n        end\n    end\n\n\n    %%\n        \n    for  f = [17 22]% 1:length(intervals)\n        figure\n        subplot(2,1,1)\n        m = pert.mask{1}+pert.mask{2}*2;\n        [v s] = sort(m)\n        imagesc(sim{f}.networkHistory.V_soma(s,:),[-65 -50])\n\n        subplot(2,1,2)\n        % plot_mean_and_std(sim{f}.networkHistory.V_soma(pert.mask{1},:)), hold on\n        % plot_mean_and_std(sim{f}.networkHistory.V_soma(pert.mask{2},:),'color', [0 0 1])\n        plot_mean_and_std(sim{f}.networkHistory.V_soma(pert.mask{1}&pert.mask{2},:),'color', [0 1 0])\n        title(sim{f}.note)\n        legend({'exc' 'excmean' 'inh' 'inhmean'  'comb' 'combmean'})\n        alpha(.2)\n\n    end\n\n    %% TRIGGERED RESPONSES\n    figure\n\n    % cmap = jet(length(intervals))\n    cmap = cbrewer('div', 'RdYlBu', length(intervals))\n    % cmap = flipud(cmap)\n\n    for f=1:length(intervals)\n        subplot(1,length(intervals),f)\n        plot(mean(sim{f}.networkHistory.V_soma(pert.mask{1}&pert.mask{2},800:1500)),'color', cmap(f,:),'linewidth',2), hold on\n        title(num2str(sim{f}.perturbation.triggers{1}-sim{f}.perturbation.triggers{2}))\n        axis off\n        ylim([-75,-40])\n        alpha(.3)\n    end\n\n\n    %%\n    figure\n    for f=1:length(intervals)\n        collected(f,:) = mean(sim{f}.networkHistory.V_soma(pert.mask{1}&pert.mask{2},:));\n    end\n    waterfall(collected)\n\n    %%\n\n    imagesc(collected)\n\n\n    %% \n    combmask = pert.mask{1} & pert.mask{2};\n\n    for f = 1:length(intervals)\n        \n        last_stim  = max([sim{f}.perturbation.triggers{1},sim{f}.perturbation.triggers{2}]);\n        \n        osc_cells_pre_stim  = count_oscillating_cells(sim{f}, [500:600], 0);\n        osc_cells_pos_stim  = count_oscillating_cells(sim{f}, [last_stim+50:last_stim+150], 0);\n        osc_cells_late_stim = count_oscillating_cells(sim{f}, [last_stim+700:last_stim+900], 0);\n        \n        pre_stim(f)  = osc_cells_pre_stim.proportion;\n        post_stim(f) = osc_cells_pos_stim.proportion;\n        late_stim(f) = osc_cells_late_stim.proportion;\n        \n        pre_stim_amp(f,:)  = max(sim{f}.networkHistory.V_soma(:,200:300),[],2);\n        post_stim_amp(f,:) = max(sim{f}.networkHistory.V_soma(:,last_stim:last_stim+100),[],2);\n        late_stim_amp(f,:) = max(sim{f}.networkHistory.V_soma(:,1800:1900),[], 2);\n        \n     \n    end\n\n    f_prepost = figure;\n    ax0 = axes;\n\n    plot(ax0,[pre_stim', post_stim', late_stim']', '-o')\n    legend(num2str(intervals'))\n    title('proportion of oscillating cells')\n    ax0.XTick= [1 2 3];\n    ax0.XTickLabel = {'Pre', 'Post', 'Late'}\n    ax0.ColorOrder = cbrewer('div', 'RdYlBu', length(intervals));\n\n\n    f_prepost_sync = figure;\n    ax1 = axes;\n\n    plot(ax1,sync_estimate', '-o')\n    legend(num2str(intervals'))\n    title('sync')\n    ax1.XTick= [1 2 3];\n    ax1.XTickLabel = {'Pre', 'During', 'Post', 'Late'}\n    ax1.ColorOrder = cbrewer('div', 'RdYlBu', length(intervals));\n\n\n    f_prepost_sync = figure;\n    ax11 = axes;\n\n    plot(ax11,sync_estimate_g', '-o')\n    legend(num2str(intervals'))\n    title('sync')\n    ax11.XTick= [1 2 3];\n    ax11.XTickLabel = {'Pre', 'During', 'Post', 'Late'}\n    ax11.ColorOrder = flipud(cbrewer('div', 'RdYlBu', length(intervals)));\n\n\n\n\n\n    f_prepost_amp = figure;\n    ax2 = subplot(1,2,1);\n\n    amplitudes = [mean(pre_stim_amp,2), mean(post_stim_amp,2), mean(late_stim_amp,2)]';\n    plot(ax2,amplitudes, '-o')\n    legend(num2str(intervals'))\n    title('amplitude of rebound')\n    ax2.XTick= [1 2 3];\n    ax2.XTickLabel = {'Pre', 'Post', 'Late'}\n    ax2.ColorOrder = flipud(cbrewer('div', 'RdYlBu', length(intervals)));\n    ax2.YLim = [-60 -40];\n\n    ax3 = subplot(1,2,2);\n    amplitudes = [mean(pre_stim_amp(:,combmask),2), mean(post_stim_amp(:,combmask),2), mean(late_stim_amp(:,combmask),2)]';\n    plot(ax3,amplitudes, '-o')\n    legend(num2str(intervals'))\n    title('amplitude of rebound (stimulated cells)')\n    ax3.XTick= [1 2 3];\n    ax3.XTickLabel = {'Pre', 'Post', 'Late'}\n    ax3.ColorOrder = flipud(cbrewer('div', 'RdYlBu', length(intervals)));\n    ax3.YLim = [-60 -40];\n\nend",
			"file": "scripts/simulation/Exc_Inh_reconstruction_TEST.m",
			"file_size": 15964,
			"file_write_time": 133214525365162906,
			"settings":
			{
				"buffer_size": 16064,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					52,
					1,
					"insert",
					{
						"characters": "\n\n\n\n\n"
					},
					"BQAAAJ8dAAAAAAAAoB0AAAAAAAAAAAAAoB0AAAAAAAChHQAAAAAAAAAAAAChHQAAAAAAAKIdAAAAAAAAAAAAAKIdAAAAAAAAox0AAAAAAAAAAAAAox0AAAAAAACkHQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnx0AAAAAAACfHQAAAAAAAAAAAAAAAPC/"
				],
				[
					59,
					1,
					"paste",
					null,
					"AQAAAKEdAAAAAAAA+h4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoR0AAAAAAAChHQAAAAAAAAAAAAAAAAAA"
				],
				[
					63,
					1,
					"insert",
					{
						"characters": "\n\n%"
					},
					"AwAAAKAdAAAAAAAAoR0AAAAAAAAAAAAAoR0AAAAAAACiHQAAAAAAAAAAAACiHQAAAAAAAKMdAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoB0AAAAAAACgHQAAAAAAAAAAAAAAAPC/"
				],
				[
					64,
					1,
					"insert",
					{
						"characters": " adding"
					},
					"BwAAAKMdAAAAAAAApB0AAAAAAAAAAAAApB0AAAAAAAClHQAAAAAAAAAAAAClHQAAAAAAAKYdAAAAAAAAAAAAAKYdAAAAAAAApx0AAAAAAAAAAAAApx0AAAAAAACoHQAAAAAAAAAAAACoHQAAAAAAAKkdAAAAAAAAAAAAAKkdAAAAAAAAqh0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAox0AAAAAAACjHQAAAAAAAAAAAAAAAPC/"
				],
				[
					65,
					1,
					"insert",
					{
						"characters": " somati"
					},
					"BwAAAKodAAAAAAAAqx0AAAAAAAAAAAAAqx0AAAAAAACsHQAAAAAAAAAAAACsHQAAAAAAAK0dAAAAAAAAAAAAAK0dAAAAAAAArh0AAAAAAAAAAAAArh0AAAAAAACvHQAAAAAAAAAAAACvHQAAAAAAALAdAAAAAAAAAAAAALAdAAAAAAAAsR0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqh0AAAAAAACqHQAAAAAAAAAAAAAAAPC/"
				],
				[
					66,
					1,
					"insert",
					{
						"characters": "bb"
					},
					"AgAAALEdAAAAAAAAsh0AAAAAAAAAAAAAsh0AAAAAAACzHQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsR0AAAAAAACxHQAAAAAAAAAAAAAAAPC/"
				],
				[
					67,
					2,
					"left_delete",
					null,
					"AgAAALIdAAAAAAAAsh0AAAAAAAABAAAAYrEdAAAAAAAAsR0AAAAAAAABAAAAYg",
					"AQAAAAAAAAABAAAAsx0AAAAAAACzHQAAAAAAAAAAAAAAAPC/"
				],
				[
					68,
					1,
					"insert",
					{
						"characters": "c"
					},
					"AQAAALEdAAAAAAAAsh0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsR0AAAAAAACxHQAAAAAAAAAAAAAAAPC/"
				],
				[
					69,
					1,
					"insert",
					{
						"characters": " gaba"
					},
					"BQAAALIdAAAAAAAAsx0AAAAAAAAAAAAAsx0AAAAAAAC0HQAAAAAAAAAAAAC0HQAAAAAAALUdAAAAAAAAAAAAALUdAAAAAAAAth0AAAAAAAAAAAAAth0AAAAAAAC3HQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsh0AAAAAAACyHQAAAAAAAAAAAAAAAPC/"
				],
				[
					70,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAALcdAAAAAAAAuB0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtx0AAAAAAAC3HQAAAAAAAAAAAAAAAPC/"
				],
				[
					71,
					1,
					"insert",
					{
						"characters": "for"
					},
					"AwAAALgdAAAAAAAAuR0AAAAAAAAAAAAAuR0AAAAAAAC6HQAAAAAAAAAAAAC6HQAAAAAAALsdAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuB0AAAAAAAC4HQAAAAAAAAAAAAAAAPC/"
				],
				[
					72,
					1,
					"insert",
					{
						"characters": " long"
					},
					"BQAAALsdAAAAAAAAvB0AAAAAAAAAAAAAvB0AAAAAAAC9HQAAAAAAAAAAAAC9HQAAAAAAAL4dAAAAAAAAAAAAAL4dAAAAAAAAvx0AAAAAAAAAAAAAvx0AAAAAAADAHQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAux0AAAAAAAC7HQAAAAAAAAAAAAAAAPC/"
				],
				[
					73,
					1,
					"insert",
					{
						"characters": "er"
					},
					"AgAAAMAdAAAAAAAAwR0AAAAAAAAAAAAAwR0AAAAAAADCHQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwB0AAAAAAADAHQAAAAAAAAAAAAAAAPC/"
				],
				[
					74,
					1,
					"insert",
					{
						"characters": " hypo"
					},
					"BQAAAMIdAAAAAAAAwx0AAAAAAAAAAAAAwx0AAAAAAADEHQAAAAAAAAAAAADEHQAAAAAAAMUdAAAAAAAAAAAAAMUdAAAAAAAAxh0AAAAAAAAAAAAAxh0AAAAAAADHHQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwh0AAAAAAADCHQAAAAAAAAAAAAAAAPC/"
				],
				[
					75,
					1,
					"left_delete",
					null,
					"AQAAAMYdAAAAAAAAxh0AAAAAAAABAAAAbw",
					"AQAAAAAAAAABAAAAxx0AAAAAAADHHQAAAAAAAAAAAAAAAPC/"
				],
				[
					76,
					1,
					"insert",
					{
						"characters": "erpo,l"
					},
					"BgAAAMYdAAAAAAAAxx0AAAAAAAAAAAAAxx0AAAAAAADIHQAAAAAAAAAAAADIHQAAAAAAAMkdAAAAAAAAAAAAAMkdAAAAAAAAyh0AAAAAAAAAAAAAyh0AAAAAAADLHQAAAAAAAAAAAADLHQAAAAAAAMwdAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxh0AAAAAAADGHQAAAAAAAAAAAAAAAPC/"
				],
				[
					77,
					2,
					"left_delete",
					null,
					"AgAAAMsdAAAAAAAAyx0AAAAAAAABAAAAbModAAAAAAAAyh0AAAAAAAABAAAALA",
					"AQAAAAAAAAABAAAAzB0AAAAAAADMHQAAAAAAAAAAAAAAAPC/"
				],
				[
					78,
					1,
					"insert",
					{
						"characters": "larization"
					},
					"CgAAAModAAAAAAAAyx0AAAAAAAAAAAAAyx0AAAAAAADMHQAAAAAAAAAAAADMHQAAAAAAAM0dAAAAAAAAAAAAAM0dAAAAAAAAzh0AAAAAAAAAAAAAzh0AAAAAAADPHQAAAAAAAAAAAADPHQAAAAAAANAdAAAAAAAAAAAAANAdAAAAAAAA0R0AAAAAAAAAAAAA0R0AAAAAAADSHQAAAAAAAAAAAADSHQAAAAAAANMdAAAAAAAAAAAAANMdAAAAAAAA1B0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyh0AAAAAAADKHQAAAAAAAAAAAAAAAPC/"
				],
				[
					79,
					1,
					"insert",
					{
						"characters": " effect"
					},
					"BwAAANQdAAAAAAAA1R0AAAAAAAAAAAAA1R0AAAAAAADWHQAAAAAAAAAAAADWHQAAAAAAANcdAAAAAAAAAAAAANcdAAAAAAAA2B0AAAAAAAAAAAAA2B0AAAAAAADZHQAAAAAAAAAAAADZHQAAAAAAANodAAAAAAAAAAAAANodAAAAAAAA2x0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1B0AAAAAAADUHQAAAAAAAAAAAAAAAPC/"
				],
				[
					92,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAANEaAAAAAAAA0hoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0RoAAAAAAADRGgAAAAAAAAAAAAAAEHtA"
				],
				[
					94,
					1,
					"paste",
					null,
					"AQAAANEaAAAAAAAAHxsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0RoAAAAAAADRGgAAAAAAAAAAAAAAAAAA"
				],
				[
					98,
					1,
					"insert",
					{
						"characters": "soma"
					},
					"BQAAAOcaAAAAAAAA6BoAAAAAAAAAAAAA6BoAAAAAAADoGgAAAAAAAAQAAABkZW5k6BoAAAAAAADpGgAAAAAAAAAAAADpGgAAAAAAAOoaAAAAAAAAAAAAAOoaAAAAAAAA6xoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5xoAAAAAAADrGgAAAAAAAAAAAAAAAPC/"
				],
				[
					100,
					1,
					"insert",
					{
						"characters": "\n#"
					},
					"AgAAAE0aAAAAAAAAThoAAAAAAAAAAAAAThoAAAAAAABPGgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATRoAAAAAAABNGgAAAAAAAAAAAAAAIGxA"
				],
				[
					101,
					1,
					"insert",
					{
						"characters": " adjust"
					},
					"BwAAAE8aAAAAAAAAUBoAAAAAAAAAAAAAUBoAAAAAAABRGgAAAAAAAAAAAABRGgAAAAAAAFIaAAAAAAAAAAAAAFIaAAAAAAAAUxoAAAAAAAAAAAAAUxoAAAAAAABUGgAAAAAAAAAAAABUGgAAAAAAAFUaAAAAAAAAAAAAAFUaAAAAAAAAVhoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATxoAAAAAAABPGgAAAAAAAAAAAAAAAPC/"
				],
				[
					102,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAFYaAAAAAAAAVxoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVhoAAAAAAABWGgAAAAAAAAAAAAAAAPC/"
				],
				[
					105,
					1,
					"insert",
					{
						"characters": "%"
					},
					"AgAAAE4aAAAAAAAATxoAAAAAAAAAAAAATxoAAAAAAABPGgAAAAAAAAEAAAAj",
					"AQAAAAAAAAABAAAAThoAAAAAAABPGgAAAAAAAAAAAAAAAPC/"
				],
				[
					107,
					1,
					"left_delete",
					null,
					"AQAAAFYaAAAAAAAAVhoAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAVxoAAAAAAABXGgAAAAAAAP///////+9/"
				],
				[
					108,
					1,
					"insert",
					{
						"characters": "ing"
					},
					"AwAAAFYaAAAAAAAAVxoAAAAAAAAAAAAAVxoAAAAAAABYGgAAAAAAAAAAAABYGgAAAAAAAFkaAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVhoAAAAAAABWGgAAAAAAAAAAAAAAAPC/"
				],
				[
					109,
					1,
					"insert",
					{
						"characters": " to"
					},
					"AwAAAFkaAAAAAAAAWhoAAAAAAAAAAAAAWhoAAAAAAABbGgAAAAAAAAAAAABbGgAAAAAAAFwaAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWRoAAAAAAABZGgAAAAAAAAAAAAAAAPC/"
				],
				[
					110,
					1,
					"insert",
					{
						"characters": " reach"
					},
					"BgAAAFwaAAAAAAAAXRoAAAAAAAAAAAAAXRoAAAAAAABeGgAAAAAAAAAAAABeGgAAAAAAAF8aAAAAAAAAAAAAAF8aAAAAAAAAYBoAAAAAAAAAAAAAYBoAAAAAAABhGgAAAAAAAAAAAABhGgAAAAAAAGIaAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXBoAAAAAAABcGgAAAAAAAAAAAAAAAPC/"
				],
				[
					111,
					1,
					"insert",
					{
						"characters": " 5mV"
					},
					"BAAAAGIaAAAAAAAAYxoAAAAAAAAAAAAAYxoAAAAAAABkGgAAAAAAAAAAAABkGgAAAAAAAGUaAAAAAAAAAAAAAGUaAAAAAAAAZhoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYhoAAAAAAABiGgAAAAAAAAAAAAAAAPC/"
				],
				[
					112,
					1,
					"insert",
					{
						"characters": " ampi"
					},
					"BQAAAGYaAAAAAAAAZxoAAAAAAAAAAAAAZxoAAAAAAABoGgAAAAAAAAAAAABoGgAAAAAAAGkaAAAAAAAAAAAAAGkaAAAAAAAAahoAAAAAAAAAAAAAahoAAAAAAABrGgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZhoAAAAAAABmGgAAAAAAAAAAAAAAAPC/"
				],
				[
					113,
					1,
					"insert",
					{
						"characters": "t"
					},
					"AQAAAGsaAAAAAAAAbBoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaxoAAAAAAABrGgAAAAAAAAAAAAAAAPC/"
				],
				[
					114,
					2,
					"left_delete",
					null,
					"AgAAAGsaAAAAAAAAaxoAAAAAAAABAAAAdGoaAAAAAAAAahoAAAAAAAABAAAAaQ",
					"AQAAAAAAAAABAAAAbBoAAAAAAABsGgAAAAAAAAAAAAAAAPC/"
				],
				[
					115,
					1,
					"insert",
					{
						"characters": "litude"
					},
					"BgAAAGoaAAAAAAAAaxoAAAAAAAAAAAAAaxoAAAAAAABsGgAAAAAAAAAAAABsGgAAAAAAAG0aAAAAAAAAAAAAAG0aAAAAAAAAbhoAAAAAAAAAAAAAbhoAAAAAAABvGgAAAAAAAAAAAABvGgAAAAAAAHAaAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAahoAAAAAAABqGgAAAAAAAAAAAAAAAPC/"
				],
				[
					116,
					1,
					"insert",
					{
						"characters": " of"
					},
					"AwAAAHAaAAAAAAAAcRoAAAAAAAAAAAAAcRoAAAAAAAByGgAAAAAAAAAAAAByGgAAAAAAAHMaAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcBoAAAAAAABwGgAAAAAAAAAAAAAAAPC/"
				],
				[
					117,
					1,
					"insert",
					{
						"characters": " hype"
					},
					"BQAAAHMaAAAAAAAAdBoAAAAAAAAAAAAAdBoAAAAAAAB1GgAAAAAAAAAAAAB1GgAAAAAAAHYaAAAAAAAAAAAAAHYaAAAAAAAAdxoAAAAAAAAAAAAAdxoAAAAAAAB4GgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcxoAAAAAAABzGgAAAAAAAAAAAAAAAPC/"
				],
				[
					118,
					1,
					"insert",
					{
						"characters": "rpolo"
					},
					"BQAAAHgaAAAAAAAAeRoAAAAAAAAAAAAAeRoAAAAAAAB6GgAAAAAAAAAAAAB6GgAAAAAAAHsaAAAAAAAAAAAAAHsaAAAAAAAAfBoAAAAAAAAAAAAAfBoAAAAAAAB9GgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeBoAAAAAAAB4GgAAAAAAAAAAAAAAAPC/"
				],
				[
					119,
					1,
					"left_delete",
					null,
					"AQAAAHwaAAAAAAAAfBoAAAAAAAABAAAAbw",
					"AQAAAAAAAAABAAAAfRoAAAAAAAB9GgAAAAAAAAAAAAAAAPC/"
				],
				[
					120,
					1,
					"insert",
					{
						"characters": "arization"
					},
					"CQAAAHwaAAAAAAAAfRoAAAAAAAAAAAAAfRoAAAAAAAB+GgAAAAAAAAAAAAB+GgAAAAAAAH8aAAAAAAAAAAAAAH8aAAAAAAAAgBoAAAAAAAAAAAAAgBoAAAAAAACBGgAAAAAAAAAAAACBGgAAAAAAAIIaAAAAAAAAAAAAAIIaAAAAAAAAgxoAAAAAAAAAAAAAgxoAAAAAAACEGgAAAAAAAAAAAACEGgAAAAAAAIUaAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfBoAAAAAAAB8GgAAAAAAAAAAAAAAAPC/"
				],
				[
					122,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAAgbAAAAAAAACRsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACBsAAAAAAAAIGwAAAAAAAAAAAAAA0H1A"
				],
				[
					132,
					1,
					"left_delete",
					null,
					"AQAAAHMeAAAAAAAAcx4AAAAAAAABAAAAMg",
					"AQAAAAAAAAABAAAAdB4AAAAAAAB0HgAAAAAAAAAAAAAAAPC/"
				],
				[
					133,
					1,
					"insert",
					{
						"characters": "3"
					},
					"AQAAAHMeAAAAAAAAdB4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcx4AAAAAAABzHgAAAAAAAAAAAAAAAPC/"
				],
				[
					137,
					1,
					"left_delete",
					null,
					"AQAAAEcfAAAAAAAARx8AAAAAAAABAAAAMg",
					"AQAAAAAAAAABAAAASB8AAAAAAABIHwAAAAAAAAAAAAAAYGFA"
				],
				[
					138,
					1,
					"insert",
					{
						"characters": "3"
					},
					"AQAAAEcfAAAAAAAASB8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARx8AAAAAAABHHwAAAAAAAAAAAAAAAPC/"
				],
				[
					140,
					1,
					"left_delete",
					null,
					"AQAAAF0fAAAAAAAAXR8AAAAAAAABAAAAMg",
					"AQAAAAAAAAABAAAAXh8AAAAAAABeHwAAAAAAAAAAAAAAYGFA"
				],
				[
					141,
					1,
					"insert",
					{
						"characters": "3"
					},
					"AQAAAF0fAAAAAAAAXh8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXR8AAAAAAABdHwAAAAAAAAAAAAAAAPC/"
				],
				[
					143,
					1,
					"left_delete",
					null,
					"AQAAAKsfAAAAAAAAqx8AAAAAAAABAAAAMg",
					"AQAAAAAAAAABAAAArB8AAAAAAACsHwAAAAAAAAAAAAAAYGFA"
				],
				[
					144,
					1,
					"insert",
					{
						"characters": "3"
					},
					"AQAAAKsfAAAAAAAArB8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqx8AAAAAAACrHwAAAAAAAAAAAAAAAPC/"
				],
				[
					148,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"BAAAAJwfAAAAAAAAnh8AAAAAAAAAAAAATh8AAAAAAABQHwAAAAAAAAAAAAA4HwAAAAAAADofAAAAAAAAAAAAAGQeAAAAAAAAZh4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZB4AAAAAAAC9HwAAAAAAAAAAAAAAAAAA"
				],
				[
					152,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AQAAAAobAAAAAAAADBsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFRsAAAAAAABZGwAAAAAAAAAAAAAAwFdA"
				],
				[
					181,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAIUaAAAAAAAAhhoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhRoAAAAAAACFGgAAAAAAAAAAAAAAAPC/"
				],
				[
					182,
					1,
					"insert",
					{
						"characters": " as"
					},
					"AwAAAIYaAAAAAAAAhxoAAAAAAAAAAAAAhxoAAAAAAACIGgAAAAAAAAAAAACIGgAAAAAAAIkaAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhhoAAAAAAACGGgAAAAAAAAAAAAAAAPC/"
				],
				[
					183,
					1,
					"insert",
					{
						"characters": " in"
					},
					"AwAAAIkaAAAAAAAAihoAAAAAAAAAAAAAihoAAAAAAACLGgAAAAAAAAAAAACLGgAAAAAAAIwaAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiRoAAAAAAACJGgAAAAAAAAAAAAAAAPC/"
				],
				[
					184,
					1,
					"insert",
					{
						"characters": " exxp"
					},
					"BQAAAIwaAAAAAAAAjRoAAAAAAAAAAAAAjRoAAAAAAACOGgAAAAAAAAAAAACOGgAAAAAAAI8aAAAAAAAAAAAAAI8aAAAAAAAAkBoAAAAAAAAAAAAAkBoAAAAAAACRGgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjBoAAAAAAACMGgAAAAAAAAAAAAAAAPC/"
				],
				[
					185,
					2,
					"left_delete",
					null,
					"AgAAAJAaAAAAAAAAkBoAAAAAAAABAAAAcI8aAAAAAAAAjxoAAAAAAAABAAAAeA",
					"AQAAAAAAAAABAAAAkRoAAAAAAACRGgAAAAAAAAAAAAAAAPC/"
				],
				[
					186,
					1,
					"insert",
					{
						"characters": "perimental"
					},
					"CgAAAI8aAAAAAAAAkBoAAAAAAAAAAAAAkBoAAAAAAACRGgAAAAAAAAAAAACRGgAAAAAAAJIaAAAAAAAAAAAAAJIaAAAAAAAAkxoAAAAAAAAAAAAAkxoAAAAAAACUGgAAAAAAAAAAAACUGgAAAAAAAJUaAAAAAAAAAAAAAJUaAAAAAAAAlhoAAAAAAAAAAAAAlhoAAAAAAACXGgAAAAAAAAAAAACXGgAAAAAAAJgaAAAAAAAAAAAAAJgaAAAAAAAAmRoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjxoAAAAAAACPGgAAAAAAAAAAAAAAAPC/"
				],
				[
					187,
					1,
					"insert",
					{
						"characters": " data"
					},
					"BQAAAJkaAAAAAAAAmhoAAAAAAAAAAAAAmhoAAAAAAACbGgAAAAAAAAAAAACbGgAAAAAAAJwaAAAAAAAAAAAAAJwaAAAAAAAAnRoAAAAAAAAAAAAAnRoAAAAAAACeGgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmRoAAAAAAACZGgAAAAAAAAAAAAAAAPC/"
				],
				[
					194,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAO0aAAAAAAAA7hoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7RoAAAAAAADtGgAAAAAAAAAAAAAAAPC/"
				],
				[
					195,
					1,
					"paste",
					null,
					"AQAAAO4aAAAAAAAAPBsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7hoAAAAAAADuGgAAAAAAAAAAAAAAAPC/"
				],
				[
					199,
					1,
					"insert",
					{
						"characters": "soma"
					},
					"BQAAAAQbAAAAAAAABRsAAAAAAAAAAAAABRsAAAAAAAAFGwAAAAAAAAQAAABkZW5kBRsAAAAAAAAGGwAAAAAAAAAAAAAGGwAAAAAAAAcbAAAAAAAAAAAAAAcbAAAAAAAACBsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABBsAAAAAAAAIGwAAAAAAAAAAAAAAAPC/"
				],
				[
					203,
					1,
					"insert",
					{
						"characters": "soma"
					},
					"BQAAACEbAAAAAAAAIhsAAAAAAAAAAAAAIhsAAAAAAAAiGwAAAAAAAAQAAABkZW5kIhsAAAAAAAAjGwAAAAAAAAAAAAAjGwAAAAAAACQbAAAAAAAAAAAAACQbAAAAAAAAJRsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJRsAAAAAAAAhGwAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "tests/gaba_synaptic_interactions.m",
			"settings":
			{
				"buffer_size": 3528,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					13,
					1,
					"left_delete",
					null,
					"AQAAAOkKAAAAAAAA6QoAAAAAAAABAAAAMg",
					"AQAAAAAAAAABAAAA6goAAAAAAADqCgAAAAAAAAAAAAAAAPC/"
				],
				[
					14,
					1,
					"insert",
					{
						"characters": "20"
					},
					"AgAAAOkKAAAAAAAA6goAAAAAAAAAAAAA6goAAAAAAADrCgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6QoAAAAAAADpCgAAAAAAAAAAAAAAAPC/"
				],
				[
					31,
					1,
					"left_delete",
					null,
					"AQAAACAAAAAAAAAAIAAAAAAAAAABAAAAMQ",
					"AQAAAAAAAAABAAAAIQAAAAAAAAAhAAAAAAAAAAAAAAAAAPC/"
				],
				[
					32,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AQAAACAAAAAAAAAAIQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIAAAAAAAAAAgAAAAAAAAAAAAAAAAAPC/"
				],
				[
					65,
					1,
					"left_delete",
					null,
					"AQAAANQIAAAAAAAA1AgAAAAAAAAdAAAALCAnZ19HQUJBX3NvbWEnLCdnX0dBQkFfZGVuZCc",
					"AQAAAAAAAAABAAAA1AgAAAAAAADxCAAAAAAAAAAAAAAAAPC/"
				],
				[
					72,
					1,
					"left_delete",
					null,
					"AQAAAM0FAAAAAAAAzQUAAAAAAAAPAAAALCAnZ19HQUJBX3NvbWEn",
					"AQAAAAAAAAABAAAAzQUAAAAAAADcBQAAAAAAAAAAAAAAAPC/"
				],
				[
					93,
					1,
					"left_delete",
					null,
					"AQAAAMcHAAAAAAAAxwcAAAAAAAABAAAAMg",
					"AQAAAAAAAAABAAAAyAcAAAAAAADIBwAAAAAAAAAAAAAAAPC/"
				],
				[
					94,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AQAAAMcHAAAAAAAAyAcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxwcAAAAAAADHBwAAAAAAAAAAAAAAAPC/"
				],
				[
					102,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAAMGAAAAAAAABAYAAAAAAAAAAAAABAYAAAAAAAAGBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAwYAAAAAAAADBgAAAAAAAAAAAAAAAPC/"
				],
				[
					103,
					1,
					"paste",
					null,
					"AQAAAAYGAAAAAAAADwYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABgYAAAAAAAAGBgAAAAAAAAAAAAAAAPC/"
				],
				[
					106,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AgAAAAwGAAAAAAAADQYAAAAAAAAAAAAADQYAAAAAAAANBgAAAAAAAAIAAAAuMQ",
					"AQAAAAAAAAABAAAADgYAAAAAAAAMBgAAAAAAAAAAAAAAAPC/"
				],
				[
					109,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AQAAAPoFAAAAAAAA/AUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAQYAAAAAAAABBgAAAAAAAAAAAAAAQGBA"
				],
				[
					115,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AgAAAKsKAAAAAAAArAoAAAAAAAAAAAAArAoAAAAAAACsCgAAAAAAAAUAAAAgMTUwMA",
					"AQAAAAAAAAABAAAAqwoAAAAAAACwCgAAAAAAAAAAAAAAAPC/"
				],
				[
					116,
					1,
					"insert",
					{
						"characters": "1:"
					},
					"AgAAAKwKAAAAAAAArQoAAAAAAAAAAAAArQoAAAAAAACuCgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArAoAAAAAAACsCgAAAAAAAAAAAAAAAPC/"
				],
				[
					117,
					1,
					"insert",
					{
						"characters": "5"
					},
					"AQAAAK4KAAAAAAAArwoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArgoAAAAAAACuCgAAAAAAAAAAAAAAAPC/"
				],
				[
					118,
					1,
					"insert",
					{
						"characters": "05"
					},
					"AgAAAK8KAAAAAAAAsAoAAAAAAAAAAAAAsAoAAAAAAACxCgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArwoAAAAAAACvCgAAAAAAAAAAAAAAAPC/"
				],
				[
					121,
					1,
					"left_delete",
					null,
					"AQAAAKwKAAAAAAAArAoAAAAAAAACAAAAMTo",
					"AQAAAAAAAAABAAAArgoAAAAAAACsCgAAAAAAAAAAAAAAAPC/"
				],
				[
					138,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAEUKAAAAAAAARgoAAAAAAAAAAAAARgoAAAAAAABICgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARQoAAAAAAABFCgAAAAAAAP///////+9/"
				],
				[
					139,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAAEgKAAAAAAAASQoAAAAAAAAAAAAASQoAAAAAAABLCgAAAAAAAAAAAABGCgAAAAAAAEYKAAAAAAAAAgAAAAkJ",
					"AQAAAAAAAAABAAAASAoAAAAAAABICgAAAAAAAAAAAAAAAPC/"
				],
				[
					140,
					1,
					"paste",
					null,
					"AQAAAEkKAAAAAAAAWQoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASQoAAAAAAABJCgAAAAAAAAAAAAAAAPC/"
				],
				[
					141,
					1,
					"insert",
					{
						"characters": "gbar_ga"
					},
					"BwAAAFkKAAAAAAAAWgoAAAAAAAAAAAAAWgoAAAAAAABbCgAAAAAAAAAAAABbCgAAAAAAAFwKAAAAAAAAAAAAAFwKAAAAAAAAXQoAAAAAAAAAAAAAXQoAAAAAAABeCgAAAAAAAAAAAABeCgAAAAAAAF8KAAAAAAAAAAAAAF8KAAAAAAAAYAoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWQoAAAAAAABZCgAAAAAAAAAAAAAAAPC/"
				],
				[
					142,
					1,
					"insert",
					{
						"characters": "ba_"
					},
					"AwAAAGAKAAAAAAAAYQoAAAAAAAAAAAAAYQoAAAAAAABiCgAAAAAAAAAAAABiCgAAAAAAAGMKAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYAoAAAAAAABgCgAAAAAAAAAAAAAAAPC/"
				],
				[
					143,
					1,
					"insert_completion",
					{
						"completion": "gbar_gaba_dend",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "gbar_gaba_dend"
					},
					"AgAAAFkKAAAAAAAAWQoAAAAAAAAKAAAAZ2Jhcl9nYWJhX1kKAAAAAAAAZwoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYwoAAAAAAABjCgAAAAAAAAAAAAAAAPC/"
				],
				[
					144,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAGcKAAAAAAAAaAoAAAAAAAAAAAAAaAoAAAAAAABpCgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZwoAAAAAAABnCgAAAAAAAAAAAAAAAPC/"
				],
				[
					145,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAGkKAAAAAAAAagoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaQoAAAAAAABpCgAAAAAAAAAAAAAAAPC/"
				],
				[
					146,
					1,
					"insert",
					{
						"characters": "5"
					},
					"AQAAAGoKAAAAAAAAawoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAagoAAAAAAABqCgAAAAAAAAAAAAAAAPC/"
				],
				[
					150,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAGsKAAAAAAAAbAoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAawoAAAAAAABrCgAAAAAAAAAAAAAAAPC/"
				],
				[
					151,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAGwKAAAAAAAAbQoAAAAAAAAAAAAAbQoAAAAAAABvCgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbAoAAAAAAABsCgAAAAAAAAAAAAAAAPC/"
				],
				[
					152,
					1,
					"paste",
					null,
					"AQAAAG8KAAAAAAAAkQoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbwoAAAAAAABvCgAAAAAAAAAAAAAAAPC/"
				],
				[
					158,
					1,
					"insert",
					{
						"characters": "soma"
					},
					"BQAAAIkKAAAAAAAAigoAAAAAAAAAAAAAigoAAAAAAACKCgAAAAAAAAQAAABkZW5kigoAAAAAAACLCgAAAAAAAAAAAACLCgAAAAAAAIwKAAAAAAAAAAAAAIwKAAAAAAAAjQoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjQoAAAAAAACJCgAAAAAAAAAAAAAAAPC/"
				],
				[
					163,
					1,
					"left_delete",
					null,
					"AQAAAI8KAAAAAAAAjwoAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAkAoAAAAAAACQCgAAAAAAAAAAAAAAAPC/"
				],
				[
					165,
					1,
					"left_delete",
					null,
					"AQAAAI8KAAAAAAAAjwoAAAAAAAABAAAANQ",
					"AQAAAAAAAAABAAAAkAoAAAAAAACQCgAAAAAAAAAAAAAAAPC/"
				],
				[
					166,
					1,
					"insert",
					{
						"characters": " 2;"
					},
					"AwAAAI8KAAAAAAAAkAoAAAAAAAAAAAAAkAoAAAAAAACRCgAAAAAAAAAAAACRCgAAAAAAAJIKAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjwoAAAAAAACPCgAAAAAAAAAAAAAAAPC/"
				],
				[
					169,
					1,
					"left_delete",
					null,
					"AQAAAGoKAAAAAAAAagoAAAAAAAABAAAANQ",
					"AQAAAAAAAAABAAAAawoAAAAAAABrCgAAAAAAAAAAAAAAAPC/"
				],
				[
					170,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AQAAAGoKAAAAAAAAawoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAagoAAAAAAABqCgAAAAAAAAAAAAAAAPC/"
				],
				[
					181,
					1,
					"paste",
					null,
					"AgAAAGoKAAAAAAAAfwoAAAAAAAAAAAAAfwoAAAAAAAB/CgAAAAAAAAEAAAAw",
					"AQAAAAAAAAABAAAAawoAAAAAAABqCgAAAAAAAAAAAAAAAPC/"
				],
				[
					187,
					1,
					"insert",
					{
						"characters": "*0"
					},
					"AgAAAH8KAAAAAAAAgAoAAAAAAAAAAAAAgAoAAAAAAACBCgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfwoAAAAAAAB/CgAAAAAAAAAAAAAAAPC/"
				],
				[
					191,
					1,
					"paste",
					null,
					"AQAAAKYKAAAAAAAAuwoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApgoAAAAAAACmCgAAAAAAAAAAAAAAAPC/"
				],
				[
					192,
					1,
					"insert",
					{
						"characters": "*"
					},
					"AQAAALsKAAAAAAAAvAoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuwoAAAAAAAC7CgAAAAAAAAAAAAAAAPC/"
				],
				[
					198,
					1,
					"left_delete",
					null,
					"AQAAAPELAAAAAAAA8QsAAAAAAAABAAAAMA",
					"AQAAAAAAAAABAAAA8gsAAAAAAADyCwAAAAAAAAAAAAAAAPC/"
				],
				[
					199,
					1,
					"insert",
					{
						"characters": "5"
					},
					"AQAAAPELAAAAAAAA8gsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8QsAAAAAAADxCwAAAAAAAAAAAAAAAPC/"
				],
				[
					202,
					1,
					"insert",
					{
						"characters": "800"
					},
					"BAAAAPQLAAAAAAAA9QsAAAAAAAAAAAAA9QsAAAAAAAD1CwAAAAAAAAQAAAAxMDAw9QsAAAAAAAD2CwAAAAAAAAAAAAD2CwAAAAAAAPcLAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9AsAAAAAAAD4CwAAAAAAAAAAAAAAAPC/"
				],
				[
					206,
					1,
					"left_delete",
					null,
					"AQAAAPcLAAAAAAAA9wsAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAA+AsAAAAAAAD4CwAAAAAAAAAAAAAAAPC/"
				],
				[
					210,
					1,
					"left_delete",
					null,
					"AQAAAIAKAAAAAAAAgAoAAAAAAAABAAAAMA",
					"AQAAAAAAAAABAAAAgQoAAAAAAACBCgAAAAAAAAAAAAAAAPC/"
				],
				[
					211,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AQAAAIAKAAAAAAAAgQoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgAoAAAAAAACACgAAAAAAAAAAAAAAAPC/"
				],
				[
					219,
					1,
					"insert",
					{
						"characters": "plot"
					},
					"BQAAADENAAAAAAAAMg0AAAAAAAAAAAAAMg0AAAAAAAAyDQAAAAAAAA0AAAByZXBsYXlSZXN1bHRzMg0AAAAAAAAzDQAAAAAAAAAAAAAzDQAAAAAAADQNAAAAAAAAAAAAADQNAAAAAAAANQ0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMQ0AAAAAAAA+DQAAAAAAAAAAAAAAAPC/"
				],
				[
					221,
					1,
					"insert",
					{
						"characters": ".NetworHi"
					},
					"CQAAAEANAAAAAAAAQQ0AAAAAAAAAAAAAQQ0AAAAAAABCDQAAAAAAAAAAAABCDQAAAAAAAEMNAAAAAAAAAAAAAEMNAAAAAAAARA0AAAAAAAAAAAAARA0AAAAAAABFDQAAAAAAAAAAAABFDQAAAAAAAEYNAAAAAAAAAAAAAEYNAAAAAAAARw0AAAAAAAAAAAAARw0AAAAAAABIDQAAAAAAAAAAAABIDQAAAAAAAEkNAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQA0AAAAAAABADQAAAAAAAAAAAAAAAPC/"
				],
				[
					222,
					1,
					"insert",
					{
						"characters": "story.V_"
					},
					"CAAAAEkNAAAAAAAASg0AAAAAAAAAAAAASg0AAAAAAABLDQAAAAAAAAAAAABLDQAAAAAAAEwNAAAAAAAAAAAAAEwNAAAAAAAATQ0AAAAAAAAAAAAATQ0AAAAAAABODQAAAAAAAAAAAABODQAAAAAAAE8NAAAAAAAAAAAAAE8NAAAAAAAAUA0AAAAAAAAAAAAAUA0AAAAAAABRDQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASQ0AAAAAAABJDQAAAAAAAAAAAAAAAPC/"
				],
				[
					223,
					1,
					"insert_completion",
					{
						"completion": "V_soma",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "V_soma"
					},
					"AgAAAE8NAAAAAAAATw0AAAAAAAACAAAAVl9PDQAAAAAAAFUNAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUQ0AAAAAAABRDQAAAAAAAAAAAAAAAPC/"
				],
				[
					224,
					1,
					"insert",
					{
						"characters": "'"
					},
					"AQAAAFUNAAAAAAAAVg0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVQ0AAAAAAABVDQAAAAAAAAAAAAAAAPC/"
				],
				[
					227,
					1,
					"left_delete",
					null,
					"AQAAAFYNAAAAAAAAVg0AAAAAAAAJAAAALCBbXSwwLCAx",
					"AQAAAAAAAAABAAAAVg0AAAAAAABfDQAAAAAAAAAAAAAAAPC/"
				],
				[
					238,
					1,
					"left_delete",
					null,
					"AQAAAF4BAAAAAAAAXgEAAAAAAAABAAAAMQ",
					"AQAAAAAAAAABAAAAXwEAAAAAAABfAQAAAAAAAAAAAAAAAPC/"
				],
				[
					239,
					1,
					"insert",
					{
						"characters": "2"
					},
					"AQAAAF4BAAAAAAAAXwEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXgEAAAAAAABeAQAAAAAAAAAAAAAAAPC/"
				],
				[
					247,
					1,
					"left_delete",
					null,
					"AQAAAEENAAAAAAAAQQ0AAAAAAAABAAAATg",
					"AQAAAAAAAAABAAAAQg0AAAAAAABCDQAAAAAAAAAAAAAAAPC/"
				],
				[
					248,
					1,
					"insert",
					{
						"characters": "n"
					},
					"AQAAAEENAAAAAAAAQg0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQQ0AAAAAAABBDQAAAAAAAAAAAAAAAPC/"
				],
				[
					250,
					1,
					"insert",
					{
						"characters": "k"
					},
					"AQAAAEcNAAAAAAAASA0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARw0AAAAAAABHDQAAAAAAAAAAAAAAAPC/"
				],
				[
					264,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAAoJAAAAAAAACwkAAAAAAAAAAAAACwkAAAAAAAANCQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACgkAAAAAAAAKCQAAAAAAAP///////+9/"
				],
				[
					265,
					1,
					"paste",
					null,
					"AQAAAA0JAAAAAAAAFwkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADQkAAAAAAAANCQAAAAAAAAAAAAAAAPC/"
				],
				[
					267,
					1,
					"left_delete",
					null,
					"AQAAABUJAAAAAAAAFQkAAAAAAAABAAAANQ",
					"AQAAAAAAAAABAAAAFgkAAAAAAAAWCQAAAAAAAAAAAAAAAPC/"
				],
				[
					277,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AQAAAB4MAAAAAAAAHwwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHgwAAAAAAAAeDAAAAAAAAAAAAAAAQHBA"
				],
				[
					284,
					1,
					"left_delete",
					null,
					"AQAAAPwLAAAAAAAA/AsAAAAAAAABAAAANQ",
					"AQAAAAAAAAABAAAA/QsAAAAAAAD9CwAAAAAAAAAAAAAAAPC/"
				],
				[
					285,
					1,
					"insert",
					{
						"characters": "6"
					},
					"AQAAAPwLAAAAAAAA/QsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/AsAAAAAAAD8CwAAAAAAAAAAAAAAAPC/"
				],
				[
					287,
					1,
					"left_delete",
					null,
					"AQAAAP0LAAAAAAAA/QsAAAAAAAABAAAANQ",
					"AQAAAAAAAAABAAAA/gsAAAAAAAD+CwAAAAAAAAAAAAAAAPC/"
				],
				[
					288,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AQAAAP0LAAAAAAAA/gsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/QsAAAAAAAD9CwAAAAAAAAAAAAAAAPC/"
				],
				[
					292,
					1,
					"left_delete",
					null,
					"AQAAAAAMAAAAAAAAAAwAAAAAAAABAAAAOA",
					"AQAAAAAAAAABAAAAAQwAAAAAAAABDAAAAAAAAAAAAAAAAPC/"
				],
				[
					293,
					1,
					"insert",
					{
						"characters": "9"
					},
					"AQAAAAAMAAAAAAAAAQwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAwAAAAAAAAADAAAAAAAAAAAAAAAAPC/"
				],
				[
					298,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAADQLAAAAAAAANQsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANAsAAAAAAAA0CwAAAAAAAAAAAAAAAPC/"
				],
				[
					299,
					1,
					"insert",
					{
						"characters": "900:"
					},
					"BAAAADULAAAAAAAANgsAAAAAAAAAAAAANgsAAAAAAAA3CwAAAAAAAAAAAAA3CwAAAAAAADgLAAAAAAAAAAAAADgLAAAAAAAAOQsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANQsAAAAAAAA1CwAAAAAAAAAAAAAAAPC/"
				],
				[
					300,
					1,
					"insert",
					{
						"characters": "905"
					},
					"AwAAADkLAAAAAAAAOgsAAAAAAAAAAAAAOgsAAAAAAAA7CwAAAAAAAAAAAAA7CwAAAAAAADwLAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOQsAAAAAAAA5CwAAAAAAAAAAAAAAAPC/"
				],
				[
					307,
					1,
					"left_delete",
					null,
					"AQAAAMgKAAAAAAAAyAoAAAAAAAABAAAAMg",
					"AQAAAAAAAAABAAAAyQoAAAAAAADJCgAAAAAAAAAAAAAAAPC/"
				],
				[
					308,
					1,
					"insert",
					{
						"characters": "4"
					},
					"AQAAAMgKAAAAAAAAyQoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyAoAAAAAAADICgAAAAAAAAAAAAAAAPC/"
				],
				[
					314,
					2,
					"left_delete",
					null,
					"AgAAAE4KAAAAAAAATgoAAAAAAAABAAAANk0KAAAAAAAATQoAAAAAAAABAAAALg",
					"AQAAAAAAAAABAAAATwoAAAAAAABPCgAAAAAAAAAAAAAAAPC/"
				],
				[
					315,
					1,
					"insert",
					{
						"characters": "1.1"
					},
					"AwAAAE0KAAAAAAAATgoAAAAAAAAAAAAATgoAAAAAAABPCgAAAAAAAAAAAABPCgAAAAAAAFAKAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATQoAAAAAAABNCgAAAAAAAAAAAAAAAPC/"
				],
				[
					320,
					2,
					"left_delete",
					null,
					"AgAAACQKAAAAAAAAJAoAAAAAAAABAAAANCMKAAAAAAAAIwoAAAAAAAABAAAALg",
					"AQAAAAAAAAABAAAAJQoAAAAAAAAlCgAAAAAAAAAAAAAAAPC/"
				],
				[
					321,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AQAAACMKAAAAAAAAJAoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIwoAAAAAAAAjCgAAAAAAAAAAAAAAAPC/"
				],
				[
					322,
					1,
					"left_delete",
					null,
					"AQAAACMKAAAAAAAAIwoAAAAAAAABAAAAMQ",
					"AQAAAAAAAAABAAAAJAoAAAAAAAAkCgAAAAAAAAAAAAAAAPC/"
				],
				[
					323,
					1,
					"insert",
					{
						"characters": ".6"
					},
					"AgAAACMKAAAAAAAAJAoAAAAAAAAAAAAAJAoAAAAAAAAlCgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIwoAAAAAAAAjCgAAAAAAAAAAAAAAAPC/"
				],
				[
					334,
					1,
					"insert",
					{
						"characters": "2:"
					},
					"AgAAADILAAAAAAAAMwsAAAAAAAAAAAAAMwsAAAAAAAA0CwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMgsAAAAAAAAyCwAAAAAAAAAAAAAAAPC/"
				],
				[
					335,
					2,
					"left_delete",
					null,
					"AgAAADMLAAAAAAAAMwsAAAAAAAABAAAAOjILAAAAAAAAMgsAAAAAAAABAAAAMg",
					"AQAAAAAAAAABAAAANAsAAAAAAAA0CwAAAAAAAAAAAAAAAPC/"
				],
				[
					336,
					1,
					"insert",
					{
						"characters": "1:"
					},
					"AgAAADILAAAAAAAAMwsAAAAAAAAAAAAAMwsAAAAAAAA0CwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMgsAAAAAAAAyCwAAAAAAAAAAAAAAAPC/"
				],
				[
					348,
					1,
					"left_delete",
					null,
					"AQAAAC4LAAAAAAAALgsAAAAAAAABAAAANQ",
					"AQAAAAAAAAABAAAALwsAAAAAAAAvCwAAAAAAAAAAAAAAAPC/"
				],
				[
					349,
					1,
					"insert",
					{
						"characters": "2"
					},
					"AQAAAC4LAAAAAAAALwsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALgsAAAAAAAAuCwAAAAAAAAAAAAAAAPC/"
				],
				[
					351,
					1,
					"left_delete",
					null,
					"AQAAADQLAAAAAAAANAsAAAAAAAABAAAANQ",
					"AQAAAAAAAAABAAAANQsAAAAAAAA1CwAAAAAAAAAAAAAAAPC/"
				],
				[
					352,
					1,
					"insert",
					{
						"characters": "2"
					},
					"AQAAADQLAAAAAAAANQsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANAsAAAAAAAA0CwAAAAAAAAAAAAAAAPC/"
				],
				[
					358,
					1,
					"left_delete",
					null,
					"AQAAAAcMAAAAAAAABwwAAAAAAAAEAAAANjAwIA",
					"AQAAAAAAAAABAAAACwwAAAAAAAAHDAAAAAAAAAAAAAAAAPC/"
				],
				[
					363,
					1,
					"left_delete",
					null,
					"AQAAAFkLAAAAAAAAWQsAAAAAAAABAAAAMg",
					"AQAAAAAAAAABAAAAWgsAAAAAAABaCwAAAAAAAAAAAAAAAPC/"
				],
				[
					364,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AQAAAFkLAAAAAAAAWgsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWQsAAAAAAABZCwAAAAAAAAAAAAAAAPC/"
				],
				[
					373,
					1,
					"insert",
					{
						"characters": "5"
					},
					"AgAAAFkLAAAAAAAAWgsAAAAAAAAAAAAAWgsAAAAAAABaCwAAAAAAAAIAAAAxMA",
					"AQAAAAAAAAABAAAAWQsAAAAAAABbCwAAAAAAAAAAAAAAAPC/"
				],
				[
					385,
					1,
					"left_delete",
					null,
					"AQAAADsLAAAAAAAAOwsAAAAAAAAEAAAAOjkwNQ",
					"AQAAAAAAAAABAAAAOwsAAAAAAAA/CwAAAAAAAAAAAAAAAPC/"
				],
				[
					387,
					1,
					"left_delete",
					null,
					"AQAAADgLAAAAAAAAOAsAAAAAAAABAAAAOQ",
					"AQAAAAAAAAABAAAAOQsAAAAAAAA5CwAAAAAAAAAAAAAAAPC/"
				],
				[
					388,
					1,
					"insert",
					{
						"characters": "7"
					},
					"AQAAADgLAAAAAAAAOQsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOAsAAAAAAAA4CwAAAAAAAAAAAAAAAPC/"
				],
				[
					390,
					1,
					"insert",
					{
						"characters": " 900"
					},
					"BAAAADsLAAAAAAAAPAsAAAAAAAAAAAAAPAsAAAAAAAA9CwAAAAAAAAAAAAA9CwAAAAAAAD4LAAAAAAAAAAAAAD4LAAAAAAAAPwsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOwsAAAAAAAA7CwAAAAAAAAAAAAAAAPC/"
				],
				[
					392,
					1,
					"left_delete",
					null,
					"AQAAADgLAAAAAAAAOAsAAAAAAAABAAAANw",
					"AQAAAAAAAAABAAAAOQsAAAAAAAA5CwAAAAAAAAAAAAAAAPC/"
				],
				[
					393,
					1,
					"insert",
					{
						"characters": "9"
					},
					"AQAAADgLAAAAAAAAOQsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOAsAAAAAAAA4CwAAAAAAAAAAAAAAAPC/"
				],
				[
					396,
					1,
					"left_delete",
					null,
					"AQAAADgLAAAAAAAAOAsAAAAAAAABAAAAOQ",
					"AQAAAAAAAAABAAAAOQsAAAAAAAA5CwAAAAAAAAAAAAAAAPC/"
				],
				[
					397,
					1,
					"insert",
					{
						"characters": "8"
					},
					"AQAAADgLAAAAAAAAOQsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOAsAAAAAAAA4CwAAAAAAAAAAAAAAAPC/"
				],
				[
					401,
					1,
					"insert",
					{
						"characters": "1500"
					},
					"BQAAADwLAAAAAAAAPQsAAAAAAAAAAAAAPQsAAAAAAAA9CwAAAAAAAAMAAAA5MDA9CwAAAAAAAD4LAAAAAAAAAAAAAD4LAAAAAAAAPwsAAAAAAAAAAAAAPwsAAAAAAABACwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPwsAAAAAAAA8CwAAAAAAAAAAAAAAAPC/"
				],
				[
					418,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AQAAAAAJAAAAAAAAAgkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACgkAAAAAAAAKCQAAAAAAAAAAAAAAAPC/"
				],
				[
					430,
					1,
					"left_delete",
					null,
					"AQAAAAkMAAAAAAAACQwAAAAAAAABAAAAOQ",
					"AQAAAAAAAAABAAAACgwAAAAAAAAKDAAAAAAAAAAAAAAAAPC/"
				],
				[
					431,
					1,
					"insert",
					{
						"characters": "8"
					},
					"AQAAAAkMAAAAAAAACgwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACQwAAAAAAAAJDAAAAAAAAAAAAAAAAPC/"
				],
				[
					434,
					1,
					"left_delete",
					null,
					"AQAAACYMAAAAAAAAJgwAAAAAAAABAAAAMg",
					"AQAAAAAAAAABAAAAJwwAAAAAAAAnDAAAAAAAAAAAAAAAAPC/"
				],
				[
					435,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AQAAACYMAAAAAAAAJwwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJgwAAAAAAAAmDAAAAAAAAAAAAAAAAPC/"
				],
				[
					441,
					1,
					"left_delete",
					null,
					"AQAAACYMAAAAAAAAJgwAAAAAAAABAAAAMQ",
					"AQAAAAAAAAABAAAAJwwAAAAAAAAnDAAAAAAAAAAAAAAAAPC/"
				],
				[
					442,
					1,
					"insert",
					{
						"characters": "2"
					},
					"AQAAACYMAAAAAAAAJwwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJgwAAAAAAAAmDAAAAAAAAAAAAAAAAPC/"
				],
				[
					448,
					1,
					"insert",
					{
						"characters": "10"
					},
					"AwAAAAoMAAAAAAAACwwAAAAAAAAAAAAACwwAAAAAAAALDAAAAAAAAAIAAAAwMAsMAAAAAAAADAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADAwAAAAAAAAKDAAAAAAAAAAAAAAAAPC/"
				],
				[
					453,
					1,
					"insert",
					{
						"characters": "5"
					},
					"AgAAACYMAAAAAAAAJwwAAAAAAAAAAAAAJwwAAAAAAAAnDAAAAAAAAAIAAAAyMA",
					"AQAAAAAAAAABAAAAKAwAAAAAAAAmDAAAAAAAAAAAAAAAAPC/"
				],
				[
					456,
					1,
					"left_delete",
					null,
					"AQAAAI8KAAAAAAAAjwoAAAAAAAABAAAAMQ",
					"AQAAAAAAAAABAAAAkAoAAAAAAACQCgAAAAAAAAAAAAAAAPC/"
				],
				[
					457,
					1,
					"insert",
					{
						"characters": "4"
					},
					"AQAAAI8KAAAAAAAAkAoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjwoAAAAAAACPCgAAAAAAAAAAAAAAAPC/"
				],
				[
					467,
					1,
					"left_delete",
					null,
					"AQAAAI8KAAAAAAAAjwoAAAAAAAABAAAANA",
					"AQAAAAAAAAABAAAAkAoAAAAAAACQCgAAAAAAAAAAAAAAWIFA"
				],
				[
					468,
					1,
					"insert",
					{
						"characters": "10"
					},
					"AgAAAI8KAAAAAAAAkAoAAAAAAAAAAAAAkAoAAAAAAACRCgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjwoAAAAAAACPCgAAAAAAAAAAAAAAAPC/"
				],
				[
					472,
					1,
					"left_delete",
					null,
					"AQAAAMwKAAAAAAAAzAoAAAAAAAABAAAANA",
					"AQAAAAAAAAABAAAAzQoAAAAAAADNCgAAAAAAAAAAAAAAAPC/"
				],
				[
					473,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AQAAAMwKAAAAAAAAzQoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzAoAAAAAAADMCgAAAAAAAAAAAAAAAPC/"
				],
				[
					479,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BQAAAM4KAAAAAAAAzwoAAAAAAAAAAAAAzwoAAAAAAADRCgAAAAAAAAAAAADRCgAAAAAAANIKAAAAAAAAAAAAANIKAAAAAAAA1AoAAAAAAAAAAAAAzwoAAAAAAADPCgAAAAAAAAIAAAAJCQ",
					"AQAAAAAAAAABAAAAzgoAAAAAAADOCgAAAAAAAAAAAAAAAPC/"
				],
				[
					480,
					1,
					"paste",
					null,
					"AQAAANIKAAAAAAAA3QoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0goAAAAAAADSCgAAAAAAAAAAAAAAAPC/"
				],
				[
					482,
					1,
					"insert",
					{
						"characters": "cell_para"
					},
					"CQAAANIKAAAAAAAA0woAAAAAAAAAAAAA0woAAAAAAADUCgAAAAAAAAAAAADUCgAAAAAAANUKAAAAAAAAAAAAANUKAAAAAAAA1goAAAAAAAAAAAAA1goAAAAAAADXCgAAAAAAAAAAAADXCgAAAAAAANgKAAAAAAAAAAAAANgKAAAAAAAA2QoAAAAAAAAAAAAA2QoAAAAAAADaCgAAAAAAAAAAAADaCgAAAAAAANsKAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0goAAAAAAADSCgAAAAAAAAAAAAAAQFFA"
				],
				[
					483,
					1,
					"insert",
					{
						"characters": "meters."
					},
					"BwAAANsKAAAAAAAA3AoAAAAAAAAAAAAA3AoAAAAAAADdCgAAAAAAAAAAAADdCgAAAAAAAN4KAAAAAAAAAAAAAN4KAAAAAAAA3woAAAAAAAAAAAAA3woAAAAAAADgCgAAAAAAAAAAAADgCgAAAAAAAOEKAAAAAAAAAAAAAOEKAAAAAAAA4goAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2woAAAAAAADbCgAAAAAAAAAAAAAAAPC/"
				],
				[
					485,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAO0KAAAAAAAA7goAAAAAAAAAAAAA7goAAAAAAADvCgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7QoAAAAAAADtCgAAAAAAAP///////+9/"
				],
				[
					486,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAO8KAAAAAAAA8AoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7woAAAAAAADvCgAAAAAAAAAAAAAAAPC/"
				],
				[
					497,
					1,
					"paste",
					null,
					"AQAAAPAKAAAAAAAACAsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8AoAAAAAAADwCgAAAAAAAP///////+9/"
				],
				[
					499,
					1,
					"left_delete",
					null,
					"AQAAAAYLAAAAAAAABgsAAAAAAAABAAAAMQ",
					"AQAAAAAAAAABAAAABwsAAAAAAAAHCwAAAAAAAAAAAAAAAPC/"
				],
				[
					500,
					1,
					"insert",
					{
						"characters": "-"
					},
					"AQAAAAYLAAAAAAAABwsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABgsAAAAAAAAGCwAAAAAAAAAAAAAAAPC/"
				],
				[
					501,
					1,
					"insert",
					{
						"characters": "70"
					},
					"AgAAAAcLAAAAAAAACAsAAAAAAAAAAAAACAsAAAAAAAAJCwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABwsAAAAAAAAHCwAAAAAAAAAAAAAAAPC/"
				],
				[
					507,
					1,
					"left_delete",
					null,
					"AQAAAEcMAAAAAAAARwwAAAAAAAABAAAAMQ",
					"AQAAAAAAAAABAAAASAwAAAAAAABIDAAAAAAAAAAAAAAAAPC/"
				],
				[
					508,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AQAAAEcMAAAAAAAASAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARwwAAAAAAABHDAAAAAAAAAAAAAAAAPC/"
				],
				[
					522,
					1,
					"left_delete",
					null,
					"AQAAAJkLAAAAAAAAmQsAAAAAAAABAAAANQ",
					"AQAAAAAAAAABAAAAmgsAAAAAAACaCwAAAAAAAAAAAAAAAPC/"
				],
				[
					523,
					1,
					"insert",
					{
						"characters": "10"
					},
					"AgAAAJkLAAAAAAAAmgsAAAAAAAAAAAAAmgsAAAAAAACbCwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmQsAAAAAAACZCwAAAAAAAAAAAAAAAPC/"
				],
				[
					526,
					1,
					"left_delete",
					null,
					"AQAAAGQMAAAAAAAAZAwAAAAAAAABAAAANQ",
					"AQAAAAAAAAABAAAAZQwAAAAAAABlDAAAAAAAAAAAAAAAAPC/"
				],
				[
					527,
					1,
					"insert",
					{
						"characters": "13"
					},
					"AgAAAGQMAAAAAAAAZQwAAAAAAAAAAAAAZQwAAAAAAABmDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZAwAAAAAAABkDAAAAAAAAAAAAAAAAPC/"
				],
				[
					528,
					1,
					"left_delete",
					null,
					"AQAAAGUMAAAAAAAAZQwAAAAAAAABAAAAMw",
					"AQAAAAAAAAABAAAAZgwAAAAAAABmDAAAAAAAAAAAAAAAAPC/"
				],
				[
					529,
					1,
					"insert",
					{
						"characters": "5"
					},
					"AQAAAGUMAAAAAAAAZgwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZQwAAAAAAABlDAAAAAAAAAAAAAAAAPC/"
				],
				[
					540,
					1,
					"insert",
					{
						"characters": ":805"
					},
					"BAAAAEoMAAAAAAAASwwAAAAAAAAAAAAASwwAAAAAAABMDAAAAAAAAAAAAABMDAAAAAAAAE0MAAAAAAAAAAAAAE0MAAAAAAAATgwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASgwAAAAAAABKDAAAAAAAAAAAAAAAAPC/"
				],
				[
					553,
					1,
					"insert",
					{
						"characters": "5"
					},
					"AgAAAI8KAAAAAAAAkAoAAAAAAAAAAAAAkAoAAAAAAACQCgAAAAAAAAIAAAAxMA",
					"AQAAAAAAAAABAAAAjwoAAAAAAACRCgAAAAAAAAAAAAAAAPC/"
				],
				[
					559,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAE0MAAAAAAAATgwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATQwAAAAAAABNDAAAAAAAAAAAAAAAAPC/"
				],
				[
					562,
					1,
					"insert",
					{
						"characters": ":1505"
					},
					"BQAAAH4LAAAAAAAAfwsAAAAAAAAAAAAAfwsAAAAAAACACwAAAAAAAAAAAACACwAAAAAAAIELAAAAAAAAAAAAAIELAAAAAAAAggsAAAAAAAAAAAAAggsAAAAAAACDCwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfgsAAAAAAAB+CwAAAAAAAAAAAAAAAPC/"
				],
				[
					566,
					1,
					"insert",
					{
						"characters": "1500"
					},
					"BAAAAFMMAAAAAAAAVAwAAAAAAAAAAAAAVAwAAAAAAABVDAAAAAAAAAAAAABVDAAAAAAAAFYMAAAAAAAAAAAAAFYMAAAAAAAAVwwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUwwAAAAAAABTDAAAAAAAAAAAAAAAAPC/"
				],
				[
					569,
					1,
					"left_delete",
					null,
					"AQAAAHIMAAAAAAAAcgwAAAAAAAABAAAANQ",
					"AQAAAAAAAAABAAAAcwwAAAAAAABzDAAAAAAAAAAAAAAAAPC/"
				],
				[
					570,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AQAAAHIMAAAAAAAAcwwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcgwAAAAAAAByDAAAAAAAAAAAAAAAAPC/"
				],
				[
					575,
					1,
					"insert",
					{
						"characters": "5"
					},
					"AgAAAJ0LAAAAAAAAngsAAAAAAAAAAAAAngsAAAAAAACeCwAAAAAAAAIAAAAxMA",
					"AQAAAAAAAAABAAAAnQsAAAAAAACfCwAAAAAAAAAAAAAAAPC/"
				],
				[
					579,
					1,
					"insert",
					{
						"characters": "5"
					},
					"AgAAAHAMAAAAAAAAcQwAAAAAAAAAAAAAcQwAAAAAAABxDAAAAAAAAAIAAAAxMA",
					"AQAAAAAAAAABAAAAcAwAAAAAAAByDAAAAAAAAAAAAAAAAPC/"
				],
				[
					585,
					1,
					"left_delete",
					null,
					"AQAAAE8MAAAAAAAATwwAAAAAAAABAAAAMA",
					"AQAAAAAAAAABAAAAUAwAAAAAAABQDAAAAAAAAAAAAAAAAPC/"
				],
				[
					586,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AQAAAE8MAAAAAAAAUAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATwwAAAAAAABPDAAAAAAAAAAAAAAAAPC/"
				],
				[
					589,
					1,
					"insert",
					{
						"characters": ":1515"
					},
					"BQAAAFYMAAAAAAAAVwwAAAAAAAAAAAAAVwwAAAAAAABYDAAAAAAAAAAAAABYDAAAAAAAAFkMAAAAAAAAAAAAAFkMAAAAAAAAWgwAAAAAAAAAAAAAWgwAAAAAAABbDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVgwAAAAAAABWDAAAAAAAAAAAAAAAAPC/"
				],
				[
					592,
					1,
					"left_delete",
					null,
					"AQAAAFAMAAAAAAAAUAwAAAAAAAABAAAANQ",
					"AQAAAAAAAAABAAAAUQwAAAAAAABRDAAAAAAAAAAAAAAAAPC/"
				],
				[
					593,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AQAAAFAMAAAAAAAAUQwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUAwAAAAAAABQDAAAAAAAAAAAAAAAAPC/"
				],
				[
					597,
					1,
					"left_delete",
					null,
					"AQAAAJ0LAAAAAAAAnQsAAAAAAAABAAAANQ",
					"AQAAAAAAAAABAAAAngsAAAAAAACeCwAAAAAAAAAAAAAAAPC/"
				],
				[
					598,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AQAAAJ0LAAAAAAAAngsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnQsAAAAAAACdCwAAAAAAAAAAAAAAAPC/"
				],
				[
					601,
					1,
					"left_delete",
					null,
					"AQAAAHUMAAAAAAAAdQwAAAAAAAABAAAANQ",
					"AQAAAAAAAAABAAAAdgwAAAAAAAB2DAAAAAAAAAAAAAAAAPC/"
				],
				[
					602,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AQAAAHUMAAAAAAAAdgwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdQwAAAAAAAB1DAAAAAAAAAAAAAAAAPC/"
				],
				[
					607,
					1,
					"left_delete",
					null,
					"AQAAAE8MAAAAAAAATwwAAAAAAAABAAAAMQ",
					"AQAAAAAAAAABAAAAUAwAAAAAAABQDAAAAAAAAAAAAAAAAPC/"
				],
				[
					608,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AQAAAE8MAAAAAAAAUAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATwwAAAAAAABPDAAAAAAAAAAAAAAAAPC/"
				],
				[
					610,
					1,
					"left_delete",
					null,
					"AQAAAFAMAAAAAAAAUAwAAAAAAAABAAAAMA",
					"AQAAAAAAAAABAAAAUQwAAAAAAABRDAAAAAAAAAAAAAAAAPC/"
				],
				[
					611,
					1,
					"insert",
					{
						"characters": "5"
					},
					"AQAAAFAMAAAAAAAAUQwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUAwAAAAAAABQDAAAAAAAAAAAAAAAAPC/"
				],
				[
					619,
					1,
					"left_delete",
					null,
					"AQAAAFkMAAAAAAAAWQwAAAAAAAABAAAAMQ",
					"AQAAAAAAAAABAAAAWgwAAAAAAABaDAAAAAAAAAAAAAAAAPC/"
				],
				[
					620,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AQAAAFkMAAAAAAAAWgwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWQwAAAAAAABZDAAAAAAAAAAAAAAAAPC/"
				],
				[
					628,
					1,
					"insert",
					{
						"characters": "1:"
					},
					"AgAAAH8LAAAAAAAAgAsAAAAAAAAAAAAAgAsAAAAAAACBCwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfwsAAAAAAAB/CwAAAAAAAAAAAAAAAPC/"
				],
				[
					630,
					1,
					"left_delete",
					null,
					"AQAAAIMLAAAAAAAAgwsAAAAAAAABAAAAMA",
					"AQAAAAAAAAABAAAAhAsAAAAAAACECwAAAAAAAAAAAAAAAPC/"
				],
				[
					631,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AQAAAIMLAAAAAAAAhAsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgwsAAAAAAACDCwAAAAAAAAAAAAAAAPC/"
				],
				[
					633,
					1,
					"left_delete",
					null,
					"AQAAAIQLAAAAAAAAhAsAAAAAAAABAAAANQ",
					"AQAAAAAAAAABAAAAhQsAAAAAAACFCwAAAAAAAAAAAAAAAPC/"
				],
				[
					634,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AQAAAIQLAAAAAAAAhQsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhAsAAAAAAACECwAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"contents": "% Figure 7 of Loyola et al. 2023\n\n% What to do\nprepare = 1;\nsimulate = 1;\nplots = 1;\n\n\ntry\n    cmap = gen_divergent_colormap;\n    cmap = flipud(cmap);\ncatch\n    disp('missing user colormaps')\nend\n\n\nif prepare\n    npert = 16;\n        \n        %% Make neurons\n\n    p1 = [1.1]; \t\t% Calcium v - conductance range\n    p2 = [4.5];  \t\t% g_CaH (does not impact PRC without CaH.)\n    \n\n    [p{1} p{2} ] = ndgrid(p1,p2);\n\n    nneurons = prod(size(p{1}));\n            \n        for n = 1:nneurons\n            neuron{n} = createDefaultNeurons(1, 'celltypes',  'clones');\n            neuron{n}.g_CaL     = p{1}(n);\n            neuron{n}.g_CaH      = p{2}(n);\n        end\n\n\n        \n    %% template for perturbation\n        pert.mask  \t  {1} = 1;\n    \tpert.amplitude{1} = 1;\n    \tpert.duration {1} = 1;\n    \tpert.triggers{1} = [100];   \n    %%\n        \n    end\n\n    if simulate\n    %% perturbation AMPA SUB\n    \tpert.type\t  {1} = 'ampa_dend';\n    \t\n        if 1\n            for n = 1:nneurons \n                neuron{n}.gbar_ampa_dend = .1;\n                prc_ampa_sub{n} = IO_PRC(neuron{n},pert, npert);\n            end\n        end\n        \n    %% perturbation AMPA SUPRA\n        if 0\n        \tpert.type\t  {1} = 'ampa_dend';\n\n            for n = 1:nneurons \n                neuron{n}.gbar_ampa_dend = .5;\n                prc_ampa_supra{n} = IO_PRC(neuron{n},pert, npert);\n            end\n        end\n        \n    %% GABA SUPRATHRESHOLD REBOUND\n        if 0\n        \tpert.duration {1} = 4;\n        \tpert.type\t  {1} = 'gaba_dend';\n\n            for n = 1:nneurons\n                neuron{n}.gbar_gaba_dend = 2;\n                prc_gaba_supra{n} = IO_PRC(neuron{n},pert, npert);\n            end\n        end\n        \n    % %% GABA SUBTHRESHOLD\n    %     pert.duration {1} = 1;\n    % \tpert.type\t  {1} = 'gaba_dend';\n    %     pert.triggers{1}  = [100 110 120]\n\n        %% GABA SUBTHRESHOLD\n        pert.duration {1} = 1;\n        pert.type     {1} = 'gaba_soma';\n        pert.triggers{1}  = [100:1:110]\n\n         for n = 1:nneurons\n                neuron{n}.gbar_gaba_soma = 1;\n                neuron{n}.V_gaba_soma = -70;\n                prc_gaba_soma{n} = IO_PRC(neuron{n},pert, npert);\n            end\n\n    \t\n        for n = 1:nneurons\n            neuron{n}.gbar_gaba_soma = 1;\n            prc_gaba_sub{n} = IO_PRC(neuron{n},pert, npert);\n        end\n\n    if 0\n    %% perturbation GABA DENDRITE PSPACE\n    \tpert.duration {1} = 2;\n    \tpert.type\t  {1} = 'gaba_soma';\n    \t\n        gabavals = 10;\n         \n        for n = 1:gabavals\n            neuron{1}.gbar_gaba_dend =(n-1)*.4;\n            prc_gaba_pspace{n} = IO_PRC(neuron{1},pert, npert);\n        end\n    end\n\n\n    %% perturbation GABA vs AMPA\n    pert.mask  \t  {1} = 1;\n    pert.amplitude{1} = 1;\n    pert.duration {1} = 1;\n    pert.type\t  {1} = 'ampa_dend';\n    pert.triggers{1} = [60];  \n\n    pert.mask  \t  {2} = 1;\n    pert.amplitude{2} = 1;\n    pert.duration {2} = 1;\n    pert.type\t  {2} = 'gaba_dend';\n    pert.triggers{2} = [0 5 10 15];   \n\n\n    for n = 1:nneurons\n        neuron{n}.gbar_gaba_dend = 1;\n        prc_comb_sub{n} = IO_PRC(neuron{n},pert, npert);\n    end\n\nend\n\n%% PLOTS\n\n%%\nif plots\n\n\n\nnneurons = 1;\n    % cmap = cbrewer('div', 'RdYlBu', 64);\n    colorlim = [-70 -40];\n\n\n    for n = 1:nneurons\n        f1 = figure;\n        f1.Color = [1 1 1];            \n        subplot(2,1,1)\n\n        pph = prc_gaba_sub{n}.pertphases; %: [229 237 245 253 261 269 277 285 292 300 308 316 324 332 340 348]\n        pph = -[pph(1) pph];\n\n        stst = prc_gaba_sub{1}.steady_state.networkHistory.V_soma;\n        VS = prc_gaba_sub{n}.VS;\n        \n\n\n        stst = repmat(stst, 17,1);\n        whole_traces = [stst VS];\n        whole_traces_cropped = whole_traces(:,300:end-300);\n        whole_traces_shifted = cell2mat(arrayfun(@(row) circshift(whole_traces(row, :), [0 pph(row)-pph(1) ]) , [1:17], 'uniformoutput', 0)');\n        whole_traces_shifted_cropped = whole_traces_shifted(:,300:end-300);\n    \n\n        hilb_vs = hilbert_of_membranepotential(whole_traces_shifted_cropped(2:end,:))\n\n\n        sp(1) = subplot(5,1,1)\n        % plot(whole_traces_shifted_cropped(1,:),'k-')\n        % hold on\n        % plot(whole_traces_shifted_cropped(7,:),'k--')\n        plot(whole_traces_cropped(1,:),'k-')\n        hold on\n        plot(whole_traces_cropped(9,:),'k--')\n        axis tight\n        axis off\n        ylim([-80,0])\n\n        title({['gaba sub']; ['neuron' num2str(n)] ; ['CaL: ' num2str(p{1}(n)) ]; ['CaH: ' num2str(p{2}(n))]})\n        \n        sp(2) = subplot(5,1,2)\n        \n        imagesc(whole_traces_shifted_cropped(2:end,:),colorlim)\n        % colororder = flipud(cbrewer('seq', 'Blues', 18));\n        % colororder(1:2,:)=[];\n        % ab.ColorOrder = colororder;\n        xlim([0 2000])\n\n        colormap(sp(2), parula)\n        axis tight\n        axis off\n        \n\n        sp(3) = subplot(5,1,3)\n\n        plot(whole_traces_shifted_cropped(2:end-1,:)','k')\n        hold on\n        plot(mean(whole_traces_shifted_cropped(2:end-1,:)), 'r', 'linewidth',2)\n        % plot_mean_and_std(whole_traces_shifted_cropped(2:end-1,:))\n        axis tight\n        axis off\n\n        \n        % colormap(sp(3), parula)\n\n        \n\n\n        sp(4) = subplot(5,1,4)\n\n        imagesc(hilb_vs.hilbert)\n        % colororder = flipud(cbrewer('seq', 'Blues', 18));\n        % colororder(1:2,:)=[];\n        % ab.ColorOrder = colororder;\n        xlim([0 2000])\n        colormap(sp(4), cmap)\n        axis off\n\n        \n\n        sp(5) = subplot(5,1,5)\n        \n        plot_mean_and_std(hilb_vs.hilbert(1:end-1,:))\n        % plot_mean_and_std(whole_traces_shifted_cropped(2:end,:))\n\n        % colororder = flipud(cbrewer('seq', 'Blues', 18));\n        % colororder(1:2,:)=[];\n        % ab.ColorOrder = colororder;\n        xlim([0 2000])\n\n\n    end\n\n    %%\n\n\n    \n    for n = 1:nneurons\n        f1 = figure;\n        f1.Color = [1 1 1];            \n\n        pph = prc_ampa_sub{n}.pertphases; %: [229 237 245 253 261 269 277 285 292 300 308 316 324 332 340 348]\n        pph = -[pph(1) pph];\n\n        stst = prc_ampa_sub{1}.steady_state.networkHistory.V_soma;\n        VS = prc_ampa_sub{n}.VS;\n        stst = repmat(stst, 17,1);\n        whole_traces = [stst VS];\n        whole_traces_cropped = whole_traces(:,300:end-300);\n        whole_traces_shifted = cell2mat(arrayfun(@(row) circshift(whole_traces(row, :), [0 pph(row)-pph(1) ]) , [1:17], 'uniformoutput', 0)');\n        whole_traces_shifted_cropped = whole_traces_shifted(:,300:end-300);\n    \n\n        hilb_vs = hilbert_of_membranepotential(whole_traces_shifted_cropped(2:end,:))\n\n\n        sp(1) = subplot(5,1,1)\n        % plot(whole_traces_shifted_cropped(1,:),'k-')\n        % hold on\n        % plot(whole_traces_shifted_cropped(7,:),'k--')\n        plot(whole_traces_cropped(1,:),'k-')\n        hold on\n        plot(whole_traces_cropped(9,:),'k--')\n        axis tight\n        axis off\n        ylim([-80,0])\n\n        title({['ampa sub']; ['neuron' num2str(n)] ; ['CaL: ' num2str(p{1}(n)) ]; ['CaH: ' num2str(p{2}(n))]})\n        \n        sp(2) = subplot(5,1,2)\n        \n        imagesc(whole_traces_shifted_cropped(2:end,:),colorlim)\n        % colororder = flipud(cbrewer('seq', 'Blues', 18));\n        % colororder(1:2,:)=[];\n        % ab.ColorOrder = colororder;\n        xlim([0 2000])\n\n        colormap(sp(2), parula)\n        axis tight\n        axis off\n        \n\n        sp(3) = subplot(5,1,3)\n  plot(whole_traces_shifted_cropped(2:end-1,:)','k')\n        hold on\n        plot(mean(whole_traces_shifted_cropped(2:end-1,:)), 'r', 'linewidth',2)\n        % plot_mean_and_std(whole_traces_shifted_cropped(2:end-1,:))\n        axis tight\n        axis off\n\n        \n\n\n        sp(4) = subplot(5,1,4)\n\n        imagesc(hilb_vs.hilbert)\n        % colororder = flipud(cbrewer('seq', 'Blues', 18));\n        % colororder(1:2,:)=[];\n        % ab.ColorOrder = colororder;\n        xlim([0 2000])\n        colormap(sp(4), cmap)\n        axis off\n\n        \n\n        sp(5) = subplot(5,1,5)\n        \n        plot_mean_and_std(hilb_vs.hilbert(1:end-1,:))\n        % plot_mean_and_std(whole_traces_shifted_cropped(2:end,:))\n\n        % colororder = flipud(cbrewer('seq', 'Blues', 18));\n        % colororder(1:2,:)=[];\n        % ab.ColorOrder = colororder;\n        xlim([0 2000])\n\n\n    \n\n\n\n\n    end\n\n\n\n\n\n\n\n\n    \n    for n = 1:nneurons\n        f1 = figure;\n        f1.Color = [1 1 1];            \n        subplot(2,1,1)\n\n        pph = prc_comb_sub{n}.pertphases; %: [229 237 245 253 261 269 277 285 292 300 308 316 324 332 340 348]\n        pph = -[pph(1) pph];\n\n        stst = prc_comb_sub{1}.steady_state.networkHistory.V_soma;\n        VS = prc_comb_sub{n}.VS;\n        stst = repmat(stst, 17,1);\n        \n\n        whole_traces = [stst VS];\n        whole_traces_cropped = whole_traces(:,300:end-300);\n        whole_traces_shifted = cell2mat(arrayfun(@(row) circshift(whole_traces(row, :), [0 pph(row)-pph(1) ]) , [1:17], 'uniformoutput', 0)');\n        whole_traces_shifted_cropped = whole_traces_shifted(:,300:end-300);\n    \n\n        hilb_vs = hilbert_of_membranepotential(whole_traces_shifted_cropped)\n\n\n        sp(1) = subplot(5,1,1)\n        % plot(whole_traces_shifted_cropped(1,:),'k-')\n        % hold on\n        % plot(whole_traces_shifted_cropped(7,:),'k--')\n        plot(whole_traces_cropped(1,:),'k-')\n        hold on\n        plot(whole_traces_cropped(9,:),'k--')\n        \n        axis tight\n        axis off\n        ylim([-80,0])\n\n        title({['combined']; ['neuron' num2str(n)] ; ['CaL: ' num2str(p{1}(n)) ]; ['CaH: ' num2str(p{2}(n))]})\n        \n        sp(2) = subplot(5,1,2)\n        \n        imagesc(whole_traces_shifted_cropped(2:end,:),colorlim)\n        % colororder = flipud(cbrewer('seq', 'Blues', 18));\n        % colororder(1:2,:)=[];\n        % ab.ColorOrder = colororder;\n        xlim([0 2000])\n\n        colormap(sp(2), parula)\n        axis tight\n        axis off\n        \n\n        sp(3) = subplot(5,1,3)\n        \n        plot(whole_traces_shifted_cropped(2:end-1,:)','k')\n        hold on\n        plot(mean(whole_traces_shifted_cropped(2:end-1,:)), 'r', 'linewidth',2)\n        % plot_mean_and_std(whole_traces_shifted_cropped(2:end-1,:))\n        axis tight\n        axis off\n\n        \n        \n\n\n        sp(4) = subplot(5,1,4)\n\n        imagesc(hilb_vs.hilbert(2:end,:))\n        % colororder = flipud(cbrewer('seq', 'Blues', 18));\n        % colororder(1:2,:)=[];\n        % ab.ColorOrder = colororder;\n        xlim([0 2000])\n        colormap(sp(4), cmap)\n        axis off\n\n        \n\n        sp(5) = subplot(5,1,5)\n        \n        plot_mean_and_std(hilb_vs.hilbert(2:end-1,:))\n        % plot_mean_and_std(whole_traces_shifted_cropped(2:end,:))\n\n        % colororder = flipud(cbrewer('seq', 'Blues', 18));\n        % colororder(1:2,:)=[];\n        % ab.ColorOrder = colororder;\n        xlim([0 2000])\n\n\n    \n    end\n    \n    \n\n\nend",
			"file": "figures/Loyola_PRC_TEST.m",
			"file_size": 10780,
			"file_write_time": 133214527690175660,
			"settings":
			{
				"buffer_size": 10780,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					11,
					1,
					"left_delete",
					null,
					"AQAAALkHAAAAAAAAuQcAAAAAAAABAAAAMA",
					"AQAAAAAAAAABAAAAuQcAAAAAAAC6BwAAAAAAAAAAAAAAAPC/"
				],
				[
					19,
					1,
					"insert",
					{
						"characters": "5"
					},
					"AgAAALoHAAAAAAAAuwcAAAAAAAAAAAAAuwcAAAAAAAC7BwAAAAAAAAMAAAAyMDA",
					"AQAAAAAAAAABAAAAugcAAAAAAAC9BwAAAAAAAAAAAAAAAPC/"
				],
				[
					28,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAL0HAAAAAAAAvgcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvQcAAAAAAAC9BwAAAAAAAAAAAAAAAPC/"
				],
				[
					29,
					1,
					"reindent",
					null,
					"AQAAAL4HAAAAAAAAxgcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvgcAAAAAAAC+BwAAAAAAAAAAAAAAAPC/"
				],
				[
					30,
					1,
					"paste",
					null,
					"AQAAAMYHAAAAAAAAWggAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxgcAAAAAAADGBwAAAAAAAAAAAAAAAPC/"
				],
				[
					36,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAAcIAAAAAAAACAgAAAAAAAAAAAAACAgAAAAAAAAYCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABwgAAAAAAAAHCAAAAAAAAP///////+9/"
				],
				[
					37,
					1,
					"paste",
					null,
					"AQAAABgIAAAAAAAAIggAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGAgAAAAAAAAYCAAAAAAAAAAAAAAAAPC/"
				],
				[
					38,
					1,
					"insert",
					{
						"characters": "V_gaba_"
					},
					"BwAAACIIAAAAAAAAIwgAAAAAAAAAAAAAIwgAAAAAAAAkCAAAAAAAAAAAAAAkCAAAAAAAACUIAAAAAAAAAAAAACUIAAAAAAAAJggAAAAAAAAAAAAAJggAAAAAAAAnCAAAAAAAAAAAAAAnCAAAAAAAACgIAAAAAAAAAAAAACgIAAAAAAAAKQgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIggAAAAAAAAiCAAAAAAAAAAAAAAAAPC/"
				],
				[
					39,
					1,
					"insert",
					{
						"characters": "soma"
					},
					"BAAAACkIAAAAAAAAKggAAAAAAAAAAAAAKggAAAAAAAArCAAAAAAAAAAAAAArCAAAAAAAACwIAAAAAAAAAAAAACwIAAAAAAAALQgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKQgAAAAAAAApCAAAAAAAAAAAAAAAAPC/"
				],
				[
					40,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAC0IAAAAAAAALggAAAAAAAAAAAAALggAAAAAAAAvCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALQgAAAAAAAAtCAAAAAAAAAAAAAAAAPC/"
				],
				[
					41,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAC8IAAAAAAAAMAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALwgAAAAAAAAvCAAAAAAAAAAAAAAAAPC/"
				],
				[
					42,
					1,
					"insert",
					{
						"characters": "-70"
					},
					"AwAAADAIAAAAAAAAMQgAAAAAAAAAAAAAMQgAAAAAAAAyCAAAAAAAAAAAAAAyCAAAAAAAADMIAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMAgAAAAAAAAwCAAAAAAAAAAAAAAAAPC/"
				],
				[
					47,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAADMIAAAAAAAANAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMwgAAAAAAAAzCAAAAAAAAAAAAAAAAPC/"
				],
				[
					55,
					1,
					"insert",
					{
						"characters": "soma"
					},
					"BQAAAP4HAAAAAAAA/wcAAAAAAAAAAAAA/wcAAAAAAAD/BwAAAAAAAAQAAABkZW5k/wcAAAAAAAAACAAAAAAAAAAAAAAACAAAAAAAAAEIAAAAAAAAAAAAAAEIAAAAAAAAAggAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/gcAAAAAAAACCAAAAAAAAAAAAAAAAPC/"
				],
				[
					59,
					1,
					"left_delete",
					null,
					"AQAAAAUIAAAAAAAABQgAAAAAAAABAAAAMg",
					"AQAAAAAAAAABAAAABggAAAAAAAAGCAAAAAAAAAAAAAAAAPC/"
				],
				[
					60,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AQAAAAUIAAAAAAAABggAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABQgAAAAAAAAFCAAAAAAAAAAAAAAAAPC/"
				],
				[
					80,
					2,
					"left_delete",
					null,
					"AgAAAGsHAAAAAAAAawcAAAAAAAABAAAAMGoHAAAAAAAAagcAAAAAAAABAAAAMw",
					"AQAAAAAAAAABAAAAbAcAAAAAAABsBwAAAAAAAAAAAAAAAPC/"
				],
				[
					81,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AQAAAGoHAAAAAAAAawcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAagcAAAAAAABqBwAAAAAAAAAAAAAAAPC/"
				],
				[
					102,
					1,
					"insert",
					{
						"characters": "soma"
					},
					"BQAAAE0IAAAAAAAATggAAAAAAAAAAAAATggAAAAAAABOCAAAAAAAAAUAAABzdXByYU4IAAAAAAAATwgAAAAAAAAAAAAATwgAAAAAAABQCAAAAAAAAAAAAABQCAAAAAAAAFEIAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATQgAAAAAAABSCAAAAAAAAAAAAAAAAPC/"
				],
				[
					113,
					1,
					"insert",
					{
						"characters": "10"
					},
					"AgAAALkHAAAAAAAAugcAAAAAAAAAAAAAugcAAAAAAAC7BwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuQcAAAAAAAC5BwAAAAAAAAAAAAAAAPC/"
				],
				[
					143,
					1,
					"left_delete",
					null,
					"AQAAALoHAAAAAAAAugcAAAAAAAABAAAAMA",
					"AQAAAAAAAAABAAAAuwcAAAAAAAC7BwAAAAAAAAAAAAAAAPC/"
				],
				[
					144,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AQAAALoHAAAAAAAAuwcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAugcAAAAAAAC6BwAAAAAAAAAAAAAAAPC/"
				],
				[
					149,
					1,
					"left_delete",
					null,
					"AQAAALsHAAAAAAAAuwcAAAAAAAABAAAANQ",
					"AQAAAAAAAAABAAAAvAcAAAAAAAC8BwAAAAAAAAAAAAAAAPC/"
				],
				[
					150,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AQAAALsHAAAAAAAAvAcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuwcAAAAAAAC7BwAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "functions/simulation/IOcell.m",
			"settings":
			{
				"buffer_size": 8605,
				"line_ending": "Windows"
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "scripts/simulation/Exc_Inh_BeamWalk.m",
			"settings":
			{
				"buffer_size": 7034,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "functions/subplus.m",
			"settings":
			{
				"buffer_size": 43,
				"encoding": "UTF-8",
				"line_ending": "Unix",
				"name": "function x = subplus(x)"
			},
			"undo_stack":
			[
				[
					1,
					1,
					"insert",
					{
						"characters": "subplus"
					},
					"BwAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAACAAAAAAAAAAAAAAACAAAAAAAAAAMAAAAAAAAAAAAAAAMAAAAAAAAABAAAAAAAAAAAAAAABAAAAAAAAAAFAAAAAAAAAAAAAAAFAAAAAAAAAAYAAAAAAAAAAAAAAAYAAAAAAAAABwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					2,
					7,
					"left_delete",
					null,
					"BwAAAAYAAAAAAAAABgAAAAAAAAABAAAAcwUAAAAAAAAABQAAAAAAAAABAAAAdQQAAAAAAAAABAAAAAAAAAABAAAAbAMAAAAAAAAAAwAAAAAAAAABAAAAcAIAAAAAAAAAAgAAAAAAAAABAAAAYgEAAAAAAAAAAQAAAAAAAAABAAAAdQAAAAAAAAAAAAAAAAAAAAABAAAAcw",
					"AQAAAAAAAAABAAAABwAAAAAAAAAHAAAAAAAAAAAAAAAAAPC/"
				],
				[
					3,
					1,
					"insert",
					{
						"characters": "function"
					},
					"CAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAACAAAAAAAAAAAAAAACAAAAAAAAAAMAAAAAAAAAAAAAAAMAAAAAAAAABAAAAAAAAAAAAAAABAAAAAAAAAAFAAAAAAAAAAAAAAAFAAAAAAAAAAYAAAAAAAAAAAAAAAYAAAAAAAAABwAAAAAAAAAAAAAABwAAAAAAAAAIAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					4,
					1,
					"insert",
					{
						"characters": " x"
					},
					"AgAAAAgAAAAAAAAACQAAAAAAAAAAAAAACQAAAAAAAAAKAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACAAAAAAAAAAIAAAAAAAAAAAAAAAAAPC/"
				],
				[
					5,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAAoAAAAAAAAACwAAAAAAAAAAAAAACwAAAAAAAAAMAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACgAAAAAAAAAKAAAAAAAAAAAAAAAAAPC/"
				],
				[
					6,
					1,
					"insert",
					{
						"characters": " sup"
					},
					"BAAAAAwAAAAAAAAADQAAAAAAAAAAAAAADQAAAAAAAAAOAAAAAAAAAAAAAAAOAAAAAAAAAA8AAAAAAAAAAAAAAA8AAAAAAAAAEAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADAAAAAAAAAAMAAAAAAAAAAAAAAAAAPC/"
				],
				[
					7,
					1,
					"left_delete",
					null,
					"AQAAAA8AAAAAAAAADwAAAAAAAAABAAAAcA",
					"AQAAAAAAAAABAAAAEAAAAAAAAAAQAAAAAAAAAAAAAAAAAPC/"
				],
				[
					8,
					1,
					"insert",
					{
						"characters": "bplus.m"
					},
					"BwAAAA8AAAAAAAAAEAAAAAAAAAAAAAAAEAAAAAAAAAARAAAAAAAAAAAAAAARAAAAAAAAABIAAAAAAAAAAAAAABIAAAAAAAAAEwAAAAAAAAAAAAAAEwAAAAAAAAAUAAAAAAAAAAAAAAAUAAAAAAAAABUAAAAAAAAAAAAAABUAAAAAAAAAFgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADwAAAAAAAAAPAAAAAAAAAAAAAAAAAPC/"
				],
				[
					9,
					2,
					"left_delete",
					null,
					"AgAAABUAAAAAAAAAFQAAAAAAAAABAAAAbRQAAAAAAAAAFAAAAAAAAAABAAAALg",
					"AQAAAAAAAAABAAAAFgAAAAAAAAAWAAAAAAAAAAAAAAAAAPC/"
				],
				[
					10,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAABQAAAAAAAAAFgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFAAAAAAAAAAUAAAAAAAAAAAAAAAAAPC/"
				],
				[
					11,
					1,
					"insert",
					{
						"characters": "x"
					},
					"AQAAABUAAAAAAAAAFgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFQAAAAAAAAAVAAAAAAAAAAAAAAAAAPC/"
				],
				[
					13,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAABcAAAAAAAAAGAAAAAAAAAAAAAAAGAAAAAAAAAAZAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFwAAAAAAAAAXAAAAAAAAAAAAAAAAAPC/"
				],
				[
					14,
					1,
					"paste",
					null,
					"AQAAABkAAAAAAAAAIQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGQAAAAAAAAAZAAAAAAAAAAAAAAAAAPC/"
				],
				[
					16,
					1,
					"insert",
					{
						"characters": "x"
					},
					"AQAAABkAAAAAAAAAGgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGQAAAAAAAAAZAAAAAAAAAAAAAAAAAAAA"
				],
				[
					17,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAABoAAAAAAAAAGwAAAAAAAAAAAAAAGwAAAAAAAAAcAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGgAAAAAAAAAaAAAAAAAAAAAAAAAAAPC/"
				],
				[
					18,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABwAAAAAAAAAHQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHAAAAAAAAAAcAAAAAAAAAAAAAAAAAPC/"
				],
				[
					20,
					1,
					"insert",
					{
						"characters": "\n\nend"
					},
					"BQAAACUAAAAAAAAAJgAAAAAAAAAAAAAAJgAAAAAAAAAnAAAAAAAAAAAAAAAnAAAAAAAAACgAAAAAAAAAAAAAACgAAAAAAAAAKQAAAAAAAAAAAAAAKQAAAAAAAAAqAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJQAAAAAAAAAlAAAAAAAAAP///////+9/"
				],
				[
					25,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAACUAAAAAAAAAJgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJQAAAAAAAAAlAAAAAAAAAP///////+9/"
				]
			]
		},
		{
			"file": "extras/Spectral_Clustering/example.m",
			"settings":
			{
				"buffer_size": 1050,
				"line_ending": "Unix"
			}
		},
		{
			"file": "extras/Spectral_Clustering/spect_clust.m",
			"settings":
			{
				"buffer_size": 1459,
				"line_ending": "Unix"
			}
		},
		{
			"file": "notebooks/cij2.m",
			"settings":
			{
				"buffer_size": 1217,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 49.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"ASCII Decorator: Font Selector"
			],
			[
				"asci",
				"ASCII Decorator: Font Selector"
			],
			[
				"pacak",
				"Package Control: List Packages"
			],
			[
				"list",
				"Package Control: List Packages"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"packa",
				"Package Control: Enable Package"
			],
			[
				"brow",
				"Preferences: Browse Packages"
			],
			[
				"package",
				"Package Control: Install Package"
			]
		],
		"width": 378.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/M/Synced/Projects/Experiments/Olive/model/OliveTree",
		"/Users/M/Synced/Projects/Experiments/Olive/model/OliveTree/functions",
		"/Users/M/Synced/Projects/Experiments/Olive/model/OliveTree/notebooks",
		"/Users/M/Synced/Projects/Experiments/Olive/model/OliveTree/scripts",
		"/Users/M/Synced/Projects/Experiments/Olive/model/OliveTree/tests",
		"/Users/M/Synced/Projects/Experiments/Olive/model/ClusterAnalysis"
	],
	"file_history":
	[
		"/Users/M/Synced/Projects/Experiments/Olive/model/ClusterAnalysis/Measures/pairwiseCosDis.m",
		"/Users/M/Synced/Projects/Experiments/Olive/model/ClusterAnalysis/LabelMatchers/cosineMatcher.m",
		"/Users/M/Synced/Projects/Experiments/Olive/model/ClusterAnalysis/script_Dynamic_Clustering_IO.m",
		"/Users/M/Synced/Projects/Experiments/Olive/model/OliveTree/functions/simulation/createW.m",
		"/Users/M/Synced/Projects/Experiments/Olive/model/OliveTree/scripts/analysis/analyze_cluster_stability.m",
		"/Users/M/Synced/Projects/Experiments/Olive/model/ClusterAnalysis/script_Dynamic_Clustering_IO_cosine.m",
		"/Users/M/Synced/Projects/Experiments/Olive/model/OliveTree/functions/simulation/createDefaultNeurons.m",
		"/Users/M/Synced/Projects/Experiments/Olive/model/OliveTree/scripts/simulation/crop_cells_pspace_4spanke.m",
		"/Users/M/Synced/Projects/Experiments/Olive/model/ClusterAnalysis/Streamlined DA/Analysis/Original Data Analysis.ipynb",
		"/Users/M/Synced/Projects/Experiments/Olive/model/OliveTree/scripts/simulation/conductance_contribution_to_firingrates.m",
		"/Users/M/Synced/Projects/Experiments/Olive/model/ClusterAnalysis/Clustering and Windows/timeClusters.m",
		"/Users/M/Synced/Projects/Experiments/Olive/model/OliveTree/functions/simulation/IOcell_wrapper.m",
		"/Users/M/Synced/Projects/Experiments/Olive/model/OliveTree/notebooks/spctcl.m",
		"/Users/M/Synced/Projects/Experiments/Olive/model/OliveTree/tests/cells_pspace.m",
		"/Users/M/Synced/Projects/Experiments/Olive/model/OliveTree/functions/simulation/IOnet.m",
		"/Users/M/Synced/Projects/Experiments/Olive/model/OliveTree/functions/simulation/IOcell.m",
		"/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/System/Library/Frameworks/CoreLocation.framework/Versions/A/Headers/CLPlacemark.h",
		"/Users/M/Synced/Projects/Experiments/Olive/model/OliveTree/functions/simulation/IOcell_vanilla.m",
		"/Users/M/Synced/Projects/Experiments/Olive/model/OliveTree/functions/simulation/IOcell_devel.m",
		"/Users/M/Synced/Projects/Experiments/Olive/model/OliveTree/scripts/analysis/connectivity_comparisons.m",
		"/Users/M/Synced/Projects/Experiments/Up_Down/UpDownPatterns.py",
		"/Users/M/Synced/Projects/Experiments/Olive/model/oliveML/olive_tree/morphologies/Pre_processed_cells/C11A_scaled_exp.swc",
		"/Users/M/Synced/Projects/Code/DynamicalSystems/NBDynSys/unittests/session_4/average_orbit_step.m",
		"/Users/M/Synced/Projects/Code/DynamicalSystems/NBDynSys/unittests/session_4/juliaset.m",
		"/Users/M/Synced/Projects/Code/DynamicalSystems/NBDynSys/unittests/session_4/mandelbrot.m",
		"/Users/M/Synced/Projects/Code/DynamicalSystems/NBDynSys/unittests/session_4/nd_orbit.m",
		"/Users/M/Synced/Projects/Code/DynamicalSystems/NBDynSys/unittests/session_4/nd_orbit_after_transients.m",
		"/Users/M/Synced/Projects/Code/DynamicalSystems/NBDynSys/unittests/session_4/test_session4.m",
		"/Users/M/Synced/Projects/Experiments/Olive/model/OliveTree/scripts/analysis/analyze_clusters_bridges.m",
		"/Users/M/Synced/Projects/Experiments/Olive/model/OliveTree/scripts/analysis/cluster_bridges_phaseanalysis_groupstim.m",
		"/Users/M/Synced/Projects/Experiments/Olive/model/OliveTree/figures/Warnaar_all_simulations_analyses_and_figures.m",
		"/Users/M/Synced/Projects/Experiments/Olive/model/OliveTree/scripts/analysis/net_edge_analysis.m",
		"/Users/M/Synced/Projects/Experiments/Olive/model/OliveTree/scripts/analysis/Warnaar_all_simulations_analyses_and_figures.m",
		"/Users/M/Synced/Projects/Experiments/Olive/model/OliveTree/scripts/simulation/HPCGPU_periodic_ampa.m",
		"/Users/M/Synced/Projects/Experiments/Olive/model/OliveTree/functions/analysis/plotnetstruct.m",
		"/Users/M/Synced/Projects/Experiments/Olive/model/OliveTree/scripts/saveallfigs.m",
		"/Users/M/Synced/Projects/Experiments/Olive/model/OliveTree/scripts/simulation/HPCGPU_scripts.m",
		"/Users/M/Synced/Projects/Experiments/Olive/model/OliveTree/extras/spectral_clustering/spect_clust.m",
		"/Users/M/Synced/Projects/Experiments/Olive/model/OliveTree/functions/simulation/IOcell_onecomp.m",
		"/Users/M/Synced/Projects/Experiments/Olive/model/OliveTree/tests/cellpspace_asymmetryCoefficient.m",
		"/Users/M/Synced/Projects/Experiments/Olive/model/OliveTree/tests/stepwise_increase_correlation.m",
		"/Users/M/Synced/Projects/Experiments/Olive/model/OliveTree/tests/sanity_check_onecell.m",
		"/Users/M/Synced/Projects/Experiments/Olive/model/OliveTree/tests/2Cells_singlesim.m",
		"/Users/M/Synced/Projects/Experiments/Olive/model/OliveTree/scripts/simulation/script_kuramoto.m",
		"/Users/M/Synced/Projects/Experiments/Olive/model/OliveTree/functions/simulation/kuramotoSheet.m",
		"/Users/M/Synced/Projects/Experiments/Olive/model/OliveTree/figures/Warnaar_all_figures.m",
		"/Users/M/Synced/Projects/Experiments/Olive/model/OliveTree/functions/analysis/sync_triggered_X.m",
		"/Users/M/Synced/Projects/Experiments/Olive/model/OliveTree/functions/simulation/apply_perturbation.m",
		"/Users/M/Synced/Projects/Experiments/Olive/model/OliveTree/scripts/analysis/Pascal_figures_with_without_gaps.m",
		"/Users/M/Synced/Projects/Experiments/Olive/model/OliveTree/scripts/analysis/xcorr_feature_analysis.m",
		"/Users/M/Synced/Projects/Experiments/Olive/model/OliveTree/functions/analysis/xcorr_summa.m",
		"/Users/M/Synced/Projects/Experiments/Olive/model/OliveTree/tests/the_origin_of_synchrony_ex.m",
		"/Users/M/Synced/Projects/Experiments/Olive/model/OliveTree/scripts/simulation/reconstruction_clusters_and_bridges.m",
		"/Users/M/Synced/Projects/Experiments/Olive/model/OliveTree/functions/simulation/create_input_mask.m",
		"/Users/M/Synced/Projects/Experiments/Olive/model/OliveTree/tests/test_ounoise_masks.m",
		"/Users/M/Synced/Projects/Experiments/Olive/model/OliveTree/scripts/analysis/Jochen_Xcorr_comparisons.m",
		"/Users/M/Synced/Projects/Experiments/Olive/model/OliveTree/scripts/analysis/analysis_NetPspace.m",
		"/Users/M/Synced/Projects/Experiments/Olive/model/OliveTree/functions/analysis/animate_volume.m",
		"/Users/M/Synced/Projects/Courses/NB2181_CompSci/2018/P1-Solutions - Numerical function analysis 2018/cs2rootsolving.m",
		"/Users/M/Synced/Projects/Experiments/Olive/model/OliveTree/functions/analysis/replayResults_3.m",
		"/Users/M/Synced/Projects/Experiments/Olive/model/OliveTree/tests/twoCells_singlesim.m",
		"/Users/M/Synced/Projects/Experiments/Olive/model/OliveTree/functions/analysis/profile_sim.m",
		"/Users/M/Synced/Projects/Experiments/Olive/model/OliveTree/functions/analysis/stim_trig_phase_dist.m",
		"/Users/M/Synced/Projects/Experiments/Olive/model/OliveTree/scripts/simulation/generate_PRC_Pascal.m",
		"/Users/M/Synced/Projects/Experiments/Olive/model/OliveTree/scripts/simulation/periodic_sims_4_Pascal.m",
		"/Users/M/Synced/Projects/Experiments/Olive/model/OliveTree/figures/figure_model_Pascal.m",
		"/Users/M/Synced/Projects/Experiments/Olive/model/OliveTree/scripts/simulation/HPCGPU_CaT_Ih_devel.m",
		"/Users/M/Synced/Projects/Experiments/Olive/model/oliveODE(VecCL)/comparison_betweenmodels_RK_OLD",
		"/Users/M/Synced/Projects/Experiments/Whisker/_scripts/video/findFirstValidFrame.m",
		"/Users/M/Synced/Projects/Experiments/Olive/model/OliveTree/figures/Jochen_stats.m",
		"/Users/M/Synced/Projects/Experiments/Olive/model/OliveTree/extras/spectral_clustering/example.m",
		"/Users/M/Synced/Projects/Experiments/Olive/model/OliveTree/extras/spectral_clustering/baic.m",
		"/Users/M/Synced/Projects/Experiments/Olive/model/OliveTree/figures/Jochen_sims.m",
		"/Users/M/Synced/Projects/Experiments/Olive/model/OliveTree/scripts/simulation/Jochen_figure_gap_alignment.m",
		"/Users/M/Synced/Projects/Experiments/Olive/model/OliveTree/scripts/simulation/simulate_3d_layer_perturbation_images.m",
		"/Users/M/Synced/Projects/Experiments/Olive/model/OliveTree/figures/Jochen_Figures.m",
		"/Users/M/Synced/Projects/Experiments/Olive/model/OliveTree/functions/analysis/spikedetect.m",
		"/Users/M/Synced/Projects/Experiments/Olive/model/OliveTree/scripts/simulation/Exc_Inh_BeamWalk_Tycho.m",
		"/Users/M/Synced/Projects/Experiments/Olive/model/OliveTree/scripts/analysis/stim_trig_spikes.m",
		"/Users/M/Synced/Projects/Experiments/Olive/model/OliveTree/functions/simulation/hilbert_of_membranepotential.m",
		"/Users/M/Synced/Projects/Experiments/Olive/model/OliveTree/functions/analysis/plot_mean_and_std.m",
		"/Users/M/Synced/Projects/Experiments/Olive/model/OliveTree/functions/analysis/NDscatter.m",
		"/Users/M/Synced/Projects/Experiments/Olive/model/OliveTree/tests/two_cells_singlesim.m",
		"/Users/M/Synced/Projects/Experiments/Olive/model/OliveTree/figures/addScalebar.m",
		"/Users/M/Synced/Projects/Experiments/Olive/model/OliveTree/scripts/reconstruction_clusters_and_bridges.m",
		"/Users/M/Synced/Projects/Experiments/Olive/model/OliveTree/analysis/replayResults_clusters.m",
		"/Users/M/Synced/Projects/Experiments/Olive/model/OliveTree/analysis/plot_volume.m",
		"/Users/M/Synced/Projects/Experiments/Olive/model/OliveTree/functions/animate_volume_hilbert.m",
		"/Users/M/Synced/Projects/Experiments/Olive/model/OliveTree/scripts/ampa_soma_dend_comparison.m",
		"/Users/M/Synced/Projects/Experiments/Olive/model/OliveTree/functions/IOcell_devel.m",
		"/Users/M/Synced/Projects/Experiments/Olive/model/OliveTree/functions/IOcell.m",
		"/Users/M/Synced/Projects/Experiments/Olive/model/OliveTree/functions/IOnet.m",
		"/Users/M/Synced/Projects/Experiments/Olive/model/OliveTree/analysis/analyze_clusters_bridges.m",
		"/Users/M/Synced/Projects/Experiments/Olive/model/OliveTree/analysis/animate_volume_2.m",
		"/Users/M/Synced/Titan/Bench4/clusters_and_bridges/curlies_bridges_randmaskstim22-Mar-2017.mat",
		"/Users/M/Synced/Projects/Experiments/Olive/model/OliveTree/functions/kuramotoSheet.m",
		"/Users/M/Synced/Projects/Experiments/Olive/model/OliveTree/scripts/HPCGPU_scripts.m",
		"/Users/M/Synced/Projects/Experiments/Olive/model/OliveTree/scripts/Jochen_figure_gap_alignment.m",
		"/Users/M/Synced/Projects/Experiments/Olive/model/OliveTree/analysis/xcorr_summa.m",
		"/Users/M/Synced/Projects/Experiments/Olive/model/OliveTree/scripts/Jochen_Xcorr_comparisons.m",
		"/Volumes/GZDoom-2.5pre-364-g2d0da4fcf/Docs/README.asm",
		"/Volumes/GZDoom-2.5pre-364-g2d0da4fcf/Docs/README.gl",
		"/Users/M/Synced/Projects/Experiments/Olive/model/OliveTree/extras/Spectral_Clustering/example.m",
		"/Users/M/Synced/Projects/Experiments/Olive/model/OliveTree/scripts/singlesim.m",
		"/Users/M/Synced/Projects/Experiments/Olive/model/OliveTree/analysis/retrieveNeuronsByClass.m",
		"/Users/M/Synced/Projects/Experiments/Olive/model/OliveTree/analysis/batch_xcorr_summas.m",
		"/Users/M/Synced/Projects/Experiments/Olive/model/OliveTree/extras/Spectral_Clustering/spect_clust.m",
		"/Users/M/Synced/Projects/Experiments/Olive/model/OliveTree/extras/Spectral_Clustering/baic.m",
		"/Users/M/Synced/Projects/Experiments/Olive/model/OliveTree/extras/Spectral_Clustering/show_cells.m",
		"/Users/M/Synced/Projects/Experiments/Olive/model/OliveTree/analysis/xcorr_feature_analysis.m",
		"/Users/M/Synced/Projects/Experiments/Olive/model/OliveTree/functions/createW.m",
		"/Users/M/Synced/Projects/Experiments/Olive/model/OliveTree/analysis/phase_distribution_over_time.m",
		"/Users/M/Synced/Projects/Experiments/Olive/model/OliveTree/analysis/saveallfigs.m",
		"/Users/M/Synced/Projects/Experiments/Olive/model/OliveTree/functions/plotnetstruct.m",
		"/Users/M/Synced/Projects/Experiments/Olive/model/OliveTree/scripts/HPCGPU_periodic_ampa.m",
		"/Users/M/Synced/Projects/Experiments/Olive/model/OliveTree/analysis/hilbert_of_membranepotential.m",
		"/Users/M/Synced/Projects/Experiments/Olive/model/OliveTree/tests/singlesim.m",
		"/Users/M/Synced/Projects/Experiments/Olive/model/OliveTree/analysis/Pascal_figures_with_without_gaps.m",
		"/Users/M/Synced/Projects/Experiments/Olive/model/OliveTree/analysis/stim_trig_spikes.m",
		"/Users/M/Synced/Projects/Experiments/Olive/model/OliveTree/scripts/singlesim_noise.m",
		"/Users/M/Synced/Projects/Experiments/Olive/model/OliveTree/analysis/replayResults_3.m",
		"/Users/M/Synced/Projects/Experiments/Olive/model/OliveTree/analysis/measureGlobalSync.m",
		"/Users/M/Synced/Projects/Experiments/Olive/model/OliveTree/analysis/stim_trig_phase_dist.m",
		"/Users/M/Synced/Projects/Experiments/Olive/model/OliveTree/analysis/NDscatter.m",
		"/Users/M/Synced/Projects/Experiments/Olive/model/OliveTree/analysis/cluster_bridges_phaseanalysis_groupstim.m",
		"/Users/M/Synced/Projects/Experiments/Olive/model/OliveTree/analyze_clusters_bridges.m",
		"/Users/M/Downloads/fitlog2.m",
		"/Users/M/Synced/Projects/Experiments/Olive/model/OliveTree/analysis/compare_simulations.m"
	],
	"find":
	{
		"height": 37.0
	},
	"find_in_files":
	{
		"height": 124.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"gaba",
			"pert",
			"conjuctive_stimulation",
			"cluster",
			"nogapcompensation",
			"baic",
			"akaike",
			"cluster",
			"kmeans",
			"noSamples",
			"rep",
			"noSamples",
			"maxNCl",
			"clustersNcl",
			"windowStep",
			"noSamples",
			"figure",
			"cosi",
			"cosine",
			"stability",
			"clusters",
			"gaps",
			"ca_extrusion",
			"arbitrary",
			"arbitra",
			"Pnames",
			"param",
			"string",
			"arbitrary",
			"cell_parameters",
			"arbitrary",
			"ca_extrusion",
			"arbi",
			"def_neurons.Pnames",
			"pnames",
			"pswee",
			"pgrid",
			"arbitrary",
			"trees",
			"n_connections",
			"reconstruction_clusterized",
			"cluster_vs_iso",
			"STOhistograms",
			"styl",
			"color",
			"comparison_boundarycells",
			"g_int",
			"p1",
			"I_app",
			"CaPlus",
			"CaP",
			"current",
			"pico",
			"alph",
			"init_cond",
			"plot_graph",
			"sync_triggered_X",
			"sync_triggered",
			"sync triggered",
			"sync_triggered_noise",
			"sameto",
			"ou_noise(4)",
			"seed",
			"gaps",
			"def_neurons",
			"GABAGAUGE_SOMA",
			"synapseprobability",
			"gpu",
			"HEAD",
			"ounoise_params",
			"trigg",
			"thisseed",
			"maskstimulation",
			"mix",
			"xcorr",
			"Ca_set",
			"coupling coefficient",
			"create",
			"scalin",
			"inputrad",
			"takeall",
			"selected",
			"eta",
			"init_cond",
			"m",
			"Sodium_h",
			"cell_function",
			"spont",
			"Potassium_x_s",
			"x_s",
			"disp",
			"Pnames",
			"conntype",
			"two_ma",
			"eigenvalue ",
			"spect_clust",
			"spec_clust",
			"twomaskstim",
			"spectral_clustering",
			"spectral",
			"clustering",
			"spectral ",
			"thisseed",
			"fgap",
			"netsize",
			"connset",
			"noneurons",
			"from \"bvf@erasmusmc.nl\" ",
			"noneurons",
			"distance_histogram",
			"histo",
			"histograms",
			"brick",
			"pert",
			"circ_",
			"circ",
			"colormap",
			"spect_clust",
			"spec_clust",
			"periodic_ampa_test_WT_1_iso_spont_50000_1_",
			"fill_between_lines",
			"psw",
			"hist",
			"gapcomp",
			"mask",
			"radius",
			"raidus",
			"plotdiffact"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"Ca2Plus",
			"Sodium_h",
			"plotstyle",
			"6x6",
			"IOnet(",
			"",
			"NO",
			"group",
			"triggers",
			"spikedetect(simresults);",
			"spikedetect(transients);",
			"spikedetect(simresults{1});",
			"spikedetect(sim)",
			"'ou_noise'",
			"ou_noise"
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": false
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"file": "functions/leak_compensation.m",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1878,
						"regions":
						{
						},
						"selection":
						[
							[
								633,
								633
							]
						],
						"settings":
						{
							"auto_name": "leak_compensation.m",
							"syntax": "Packages/Matlab/Matlab.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "scripts/simulation/Exc_Inh_reconstruction_TEST.m",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 16064,
						"regions":
						{
						},
						"selection":
						[
							[
								6949,
								6949
							]
						],
						"settings":
						{
							"syntax": "Packages/Matlab/Matlab.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2747.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "tests/gaba_synaptic_interactions.m",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3528,
						"regions":
						{
						},
						"selection":
						[
							[
								2405,
								2405
							]
						],
						"settings":
						{
							"syntax": "Packages/Matlab/Matlab.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1230.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "figures/Loyola_PRC_TEST.m",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10780,
						"regions":
						{
						},
						"selection":
						[
							[
								1878,
								2183
							]
						],
						"settings":
						{
							"syntax": "Packages/Matlab/Matlab.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1214.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "functions/simulation/IOcell.m",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8605,
						"regions":
						{
						},
						"selection":
						[
							[
								2722,
								2711
							]
						],
						"settings":
						{
							"syntax": "Packages/Matlab/Matlab.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 1.0,
						"translation.y": 888.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "scripts/simulation/Exc_Inh_BeamWalk.m",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7034,
						"regions":
						{
						},
						"selection":
						[
							[
								783,
								783
							]
						],
						"settings":
						{
							"syntax": "Packages/Matlab/Matlab.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 538.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "functions/subplus.m",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 43,
						"regions":
						{
						},
						"selection":
						[
							[
								39,
								39
							]
						],
						"settings":
						{
							"auto_name": "function x = subplus(x)",
							"syntax": "Packages/Matlab/Matlab.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "extras/Spectral_Clustering/example.m",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1050,
						"regions":
						{
						},
						"selection":
						[
							[
								560,
								560
							]
						],
						"settings":
						{
							"syntax": "Packages/Matlab/Matlab.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 48.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "extras/Spectral_Clustering/spect_clust.m",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1459,
						"regions":
						{
						},
						"selection":
						[
							[
								1243,
								1243
							]
						],
						"settings":
						{
							"syntax": "Packages/Matlab/Matlab.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "notebooks/cij2.m",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1217,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Matlab/Matlab.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 41.0
	},
	"input":
	{
		"height": 44.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "Olive_pico.sublime-project",
	"replace":
	{
		"height": 70.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"loyola",
				"OliveTree/figures/Loyola_PRC_TEST.m"
			],
			[
				"io",
				"OliveTree/functions/simulation/IOcell.m"
			],
			[
				"beamwa",
				"OliveTree/scripts/simulation/Exc_Inh_BeamWalk.m"
			],
			[
				"exc",
				"OliveTree/scripts/simulation/Exc_Inh_reconstruction.m"
			],
			[
				"createW",
				"OliveTree/functions/simulation/createW.m"
			],
			[
				"create",
				"OliveTree/functions/simulation/createDefaultNeurons.m"
			],
			[
				"time",
				"ClusterAnalysis/Clustering and Windows/timeClusters.m"
			],
			[
				"scp",
				"OliveTree/notebooks/spctcl.m"
			],
			[
				"cij",
				"OliveTree/notebooks/cij2.m"
			],
			[
				"ionet",
				"functions/simulation/IOnet.m"
			],
			[
				"iocell_war",
				"functions/simulation/IOcell_wrapper.m"
			],
			[
				"cells",
				"tests/cells_pspace.m"
			],
			[
				"iocell",
				"functions/simulation/IOcell_wrapper.m"
			],
			[
				"def",
				"functions/simulation/createDefaultNeurons.m"
			],
			[
				"pspa",
				"tests/cells_pspace.m"
			],
			[
				"analyz",
				"scripts/analysis/analyze_clusters_bridges.m"
			],
			[
				"saveall",
				"scripts/saveallfigs.m"
			],
			[
				"plotnet",
				"functions/analysis/plotnetstruct.m"
			],
			[
				"perio",
				"scripts/simulation/HPCGPU_periodic_ampa.m"
			],
			[
				"warnaa",
				"scripts/analysis/Warnaar_all_simulations_analyses_and_figures.m"
			],
			[
				"iocel",
				"functions/simulation/IOcell.m"
			],
			[
				"ion",
				"functions/simulation/IOnet.m"
			],
			[
				"hpc",
				"scripts/simulation/HPCGPU_scripts.m"
			],
			[
				"ioce",
				"functions/simulation/IOcell.m"
			],
			[
				"",
				"~/Synced/Projects/Experiments/Olive/model/OliveTree/extras/spectral_clustering/spect_clust.m"
			],
			[
				"sanity",
				"tests/sanity_check_onecell.m"
			],
			[
				"cell",
				"tests/sanity_check_onecell.m"
			],
			[
				"single",
				"tests/2Cells_singlesim.m"
			],
			[
				"kuramoto",
				"functions/simulation/kuramotoSheet.m"
			],
			[
				"kuramo",
				"scripts/simulation/script_kuramoto.m"
			],
			[
				"step",
				"tests/stepwise_increase_correlation.m"
			],
			[
				"sync",
				"scripts/analysis/cluster_bridges_phaseanalysis_groupstim.m"
			],
			[
				"ione",
				"functions/simulation/IOnet.m"
			],
			[
				"appl",
				"functions/simulation/apply_perturbation.m"
			],
			[
				"ou",
				"tests/test_ounoise_masks.m"
			],
			[
				"mask",
				"functions/simulation/create_input_mask.m"
			],
			[
				"pert",
				"functions/simulation/apply_perturbation.m"
			],
			[
				"masks",
				"tests/test_ounoise_masks.m"
			],
			[
				"ioc",
				"functions/simulation/IOcell.m"
			],
			[
				"xcorr",
				"functions/analysis/xcorr_summa.m"
			],
			[
				"anim",
				"functions/analysis/animate_volume.m"
			],
			[
				"scripts",
				"scripts/simulation/HPCGPU_scripts.m"
			],
			[
				"xcorr_",
				"functions/analysis/xcorr_summa.m"
			],
			[
				"xco",
				"scripts/analysis/Jochen_Xcorr_comparisons.m"
			],
			[
				"pascal",
				"scripts/analysis/Pascal_figures_with_without_gaps.m"
			],
			[
				"pasca",
				"scripts/simulation/generate_PRC_Pascal.m"
			],
			[
				"stim_",
				"functions/analysis/stim_trig_phase_dist.m"
			],
			[
				"hpcgp",
				"scripts/simulation/HPCGPU_periodic_ampa.m"
			],
			[
				"replay",
				"functions/analysis/replayResults_3.m"
			],
			[
				"kuram",
				"functions/simulation/kuramotoSheet.m"
			],
			[
				"spec",
				"extras/spectral_clustering/spect_clust.m"
			],
			[
				"profi",
				"functions/analysis/profile_sim.m"
			],
			[
				"createde",
				"functions/simulation/createDefaultNeurons.m"
			],
			[
				"kur",
				"functions/simulation/kuramotoSheet.m"
			],
			[
				"createw",
				"functions/simulation/createW.m"
			],
			[
				"stats",
				"figures/Jochen_stats.m"
			],
			[
				"recon",
				"scripts/simulation/reconstruction_clusters_and_bridges.m"
			],
			[
				"reconstr",
				"scripts/simulation/reconstruction_clusters_and_bridges.m"
			],
			[
				"baic",
				"extras/spectral_clustering/baic.m"
			],
			[
				"profil",
				"functions/analysis/profile_sim.m"
			],
			[
				"spect",
				"extras/spectral_clustering/spect_clust.m"
			],
			[
				"ana",
				"scripts/analysis/analyze_clusters_bridges.m"
			],
			[
				"analy",
				"scripts/analysis/analyze_clusters_bridges.m"
			],
			[
				"periodi",
				"scripts/simulation/HPCGPU_periodic_ampa.m"
			],
			[
				"crea",
				"functions/simulation/createDefaultNeurons.m"
			],
			[
				"recons",
				"scripts/simulation/reconstruction_clusters_and_bridges.m"
			],
			[
				"joceh",
				"figures/Jochen_Figures.m"
			],
			[
				"spike",
				"functions/analysis/spikedetect.m"
			],
			[
				"joche",
				"figures/Jochen_sims.m"
			],
			[
				"jocehn",
				"scripts/simulation/Jochen_figure_gap_alignment.m"
			],
			[
				"sierpi",
				"scripts/simulation/simulate_3d_layer_perturbation_images.m"
			],
			[
				"x",
				"functions/analysis/xcorr_summa.m"
			],
			[
				"hilber",
				"functions/simulation/hilbert_of_membranepotential.m"
			],
			[
				"plot_mean",
				"functions/analysis/plot_mean_and_std.m"
			],
			[
				"beam",
				"scripts/simulation/Exc_Inh_BeamWalk_Tycho.m"
			],
			[
				"sync_",
				"functions/analysis/sync_triggered_X.m"
			],
			[
				"clusters",
				"scripts/simulation/reconstruction_clusters_and_bridges.m"
			],
			[
				"nds",
				"functions/analysis/NDscatter.m"
			],
			[
				"stim",
				"scripts/analysis/stim_trig_spikes.m"
			],
			[
				"sims",
				"scripts/simulation/periodic_sims_4_Pascal.m"
			],
			[
				"bea",
				"scripts/simulation/Exc_Inh_BeamWalk.m"
			],
			[
				"exampl",
				"extras/spectral_clustering/example.m"
			],
			[
				"crteatre",
				"functions/simulation/createDefaultNeurons.m"
			],
			[
				"cellsp",
				"tests/cells_pspace.m"
			],
			[
				"two",
				"tests/two_cells_singlesim.m"
			],
			[
				"anima",
				"functions/animate_volume_hilbert.m"
			],
			[
				"ampa",
				"scripts/ampa_soma_dend_comparison.m"
			],
			[
				"animate",
				"analysis/animate_volume_2.m"
			],
			[
				"jochen",
				"scripts/Jochen_figure_gap_alignment.m"
			],
			[
				"xcor",
				"analysis/xcorr_summa.m"
			],
			[
				"joch",
				"scripts/Jochen_Xcorr_comparisons.m"
			],
			[
				"spe",
				"extras/spectral_clustering/spect_clust.m"
			],
			[
				"sinlg",
				"scripts/singlesim.m"
			],
			[
				"hp",
				"scripts/HPCGPU_scripts.m"
			],
			[
				"spec_",
				"extras/Spectral_Clustering/spect_clust.m"
			],
			[
				"spectr",
				"extras/Spectral_Clustering/example.m"
			],
			[
				"spectral",
				"extras/Spectral_Clustering/show_cells.m"
			],
			[
				"periodic_",
				"scripts/HPCGPU_periodic_ampa.m"
			],
			[
				"retrieve",
				"analysis/retrieveNeuronsByClass.m"
			],
			[
				"bach",
				"analysis/batch_xcorr_summas.m"
			],
			[
				"reconstru",
				"scripts/reconstruction_clusters_and_bridges.m"
			],
			[
				"phase",
				"analysis/phase_distribution_over_time.m"
			],
			[
				"singl",
				"tests/singlesim.m"
			],
			[
				"singlesim",
				"scripts/singlesim_noise.m"
			],
			[
				"hilbo",
				"analysis/hilbert_of_membranepotential.m"
			],
			[
				"measure",
				"analysis/measureGlobalSync.m"
			],
			[
				"repa",
				"analysis/replayResults_3.m"
			],
			[
				"bridge",
				"analyze_clusters_bridges.m"
			],
			[
				"compare",
				"analysis/compare_simulations.m"
			],
			[
				"created",
				"functions/createDefaultNeurons.m"
			],
			[
				"netp",
				"scripts/NetPspace.m"
			],
			[
				"jitter",
				"functions/jitter_cell_parameters.m"
			],
			[
				"netps",
				"analysis/analysis_NetPspace.m"
			],
			[
				"hpcscr",
				"scripts/HPCGPU_scripts.m"
			],
			[
				"ndsca",
				"analysis/NDscatter.m"
			],
			[
				"hpg",
				"scripts/HPCGPU_scripts.m"
			],
			[
				"hpcg",
				"scripts/HPCGPU_periodic_ampa.m"
			],
			[
				"profile",
				"analysis/profile_sim.m"
			],
			[
				"sanit",
				"tests/sanity_check.m"
			],
			[
				"creat",
				"functions/createDefaultNeurons.m"
			],
			[
				"crete",
				"functions/createDefaultNeurons.m"
			],
			[
				"net",
				"scripts/NetPspace.m"
			],
			[
				"conne",
				"functions/connectivity_statistics.m"
			],
			[
				"circ_pl",
				"extras/circ_plot.m"
			],
			[
				"any",
				"analyze_clusters_bridges.m"
			],
			[
				"clock",
				"analysis/clocks_over_time.m"
			],
			[
				"pspace",
				"scripts/NetPspace.m"
			],
			[
				"analysis_c",
				"analysis/analyze_clusters_bridges.m"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/Cabinet/SyncBox/Projects/Experiments/Olive/model/OliveTree/Olive_pico.sublime-workspace"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 375.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 378.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 326.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
